// <auto-generated />
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof(OrleansGeneratedCode.OrleansCodeGenaa7c39ed46FeaturePopulator))]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute(@"Metaflow.Orleans, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
namespace Metaflow.Orleans
{
    using global::Orleans;
    using global::System.Reflection;

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::Metaflow.Orleans.IRestfulGrain<>))]
    internal class OrleansCodeGenRestfulGrainReference<T> : global::Orleans.Runtime.GrainReference, global::Metaflow.Orleans.IRestfulGrain<T>
    {
        protected OrleansCodeGenRestfulGrainReference(global::Orleans.Runtime.GrainReference other): base(other)
        {
        }

        OrleansCodeGenRestfulGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions): base(other, invokeMethodOptions)
        {
        }

        protected OrleansCodeGenRestfulGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context): base(info, context)
        {
        }

        public override global::System.Int32 InterfaceId
        {
            get
            {
                return -396090128;
            }
        }

        public override global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }

        public override global::System.String InterfaceName
        {
            get
            {
                return @"global::Metaflow.Orleans.IRestfulGrain<T>";
            }
        }

        public override global::System.Boolean IsCompatible(global::System.Int32 interfaceId)
        {
            return interfaceId == -396090128 || interfaceId == -1277021679;
        }

        public override global::System.String GetMethodName(global::System.Int32 interfaceId, global::System.Int32 methodId)
        {
            switch (interfaceId)
            {
                case -396090128:
                    switch (methodId)
                    {
                        case -940922787:
                            return @"Get";
                        case 603367995:
                            return @"Handle";
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -396090128 + @",methodId=" + methodId);
                    }

                case -1277021679:
                    switch (methodId)
                    {
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1277021679 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Threading.Tasks.Task<T> Get()
        {
            return base.InvokeMethodAsync<T>(-940922787, null);
        }

        public global::System.Threading.Tasks.Task<global::Metaflow.Result<TResource>> Handle<TResource>(global::Metaflow.MutationRequest request, TResource resource)
            where TResource : class, new()
        {
            return base.InvokeMethodAsync<global::Metaflow.Result<TResource>>(603367995, new global::System.Object[]{typeof(TResource), request, resource});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::Metaflow.Orleans.IRestfulGrain<>), -396090128), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenRestfulGrainMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        private static readonly global::Orleans.CodeGeneration.GenericMethodInvoker HandleTResource = new global::Orleans.CodeGeneration.GenericMethodInvoker(typeof(global::Metaflow.IRestful<T>), @"Handle", 1);
        public async global::System.Threading.Tasks.Task<global::System.Object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            global::System.Int32 interfaceId = request.InterfaceId;
            global::System.Int32 methodId = request.MethodId;
            global::System.Object[] arguments = request.Arguments;
            if (grain == null)
                throw new global::System.ArgumentNullException(@"grain");
            switch (interfaceId)
            {
                case -396090128:
                    switch (methodId)
                    {
                        case -940922787:
                            return await ((global::Metaflow.Orleans.IRestfulGrain<T>)grain).Get();
                        case 603367995:
                            return await HandleTResource.Invoke(grain, arguments);
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -396090128 + @",methodId=" + methodId);
                    }

                case -1277021679:
                    switch (methodId)
                    {
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1277021679 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Int32 InterfaceId
        {
            get
            {
                return -396090128;
            }
        }

        public global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }
    }
}

namespace OrleansGeneratedCode94C25308
{
    using global::Orleans;
    using global::System.Reflection;

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::Metaflow.Result<>))]
    internal sealed class OrleansCodeGenMetaflow_ResultSerializer<TResource>
        where TResource : class, new()
    {
        private readonly global::Orleans.Serialization.ValueTypeSetter<global::Metaflow.Result<TResource>, TResource> setField2;
        private readonly global::Orleans.Serialization.ValueTypeSetter<global::Metaflow.Result<TResource>, TResource> setField1;
        private readonly global::Orleans.Serialization.ValueTypeSetter<global::Metaflow.Result<TResource>, global::System.Boolean> setField0;
        private readonly global::Orleans.Serialization.ValueTypeSetter<global::Metaflow.Result<TResource>, global::System.String> setField3;
        private readonly global::Orleans.Serialization.ValueTypeSetter<global::Metaflow.Result<TResource>, global::Metaflow.StateChange> setField4;
        public OrleansCodeGenMetaflow_ResultSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
            global::System.Reflection.FieldInfo field2 = typeof(global::Metaflow.Result<TResource>).GetField(@"<After>k__BackingField", (global::System.Reflection.BindingFlags.Instance | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Public));
            setField2 = (global::Orleans.Serialization.ValueTypeSetter<global::Metaflow.Result<TResource>, TResource>)fieldUtils.GetValueSetter(field2);
            global::System.Reflection.FieldInfo field1 = typeof(global::Metaflow.Result<TResource>).GetField(@"<Before>k__BackingField", (global::System.Reflection.BindingFlags.Instance | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Public));
            setField1 = (global::Orleans.Serialization.ValueTypeSetter<global::Metaflow.Result<TResource>, TResource>)fieldUtils.GetValueSetter(field1);
            global::System.Reflection.FieldInfo field0 = typeof(global::Metaflow.Result<TResource>).GetField(@"<OK>k__BackingField", (global::System.Reflection.BindingFlags.Instance | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Public));
            setField0 = (global::Orleans.Serialization.ValueTypeSetter<global::Metaflow.Result<TResource>, global::System.Boolean>)fieldUtils.GetValueSetter(field0);
            global::System.Reflection.FieldInfo field3 = typeof(global::Metaflow.Result<TResource>).GetField(@"<Reason>k__BackingField", (global::System.Reflection.BindingFlags.Instance | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Public));
            setField3 = (global::Orleans.Serialization.ValueTypeSetter<global::Metaflow.Result<TResource>, global::System.String>)fieldUtils.GetValueSetter(field3);
            global::System.Reflection.FieldInfo field4 = typeof(global::Metaflow.Result<TResource>).GetField(@"<StateChange>k__BackingField", (global::System.Reflection.BindingFlags.Instance | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Public));
            setField4 = (global::Orleans.Serialization.ValueTypeSetter<global::Metaflow.Result<TResource>, global::Metaflow.StateChange>)fieldUtils.GetValueSetter(field4);
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public global::System.Object DeepCopier(global::System.Object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::Metaflow.Result<TResource> input = ((global::Metaflow.Result<TResource>)original);
            global::Metaflow.Result<TResource> result = default(global::Metaflow.Result<TResource>);
            context.RecordCopy(original, result);
            setField2(ref result, (TResource)context.DeepCopyInner(input.After));
            setField1(ref result, (TResource)context.DeepCopyInner(input.Before));
            setField0(ref result, input.OK);
            setField3(ref result, input.Reason);
            setField4(ref result, input.StateChange);
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(global::System.Object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::Metaflow.Result<TResource> input = (global::Metaflow.Result<TResource>)untypedInput;
            context.SerializeInner(input.After, typeof(TResource));
            context.SerializeInner(input.Before, typeof(TResource));
            context.SerializeInner(input.OK, typeof(global::System.Boolean));
            context.SerializeInner(input.Reason, typeof(global::System.String));
            context.SerializeInner(input.StateChange, typeof(global::Metaflow.StateChange));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public global::System.Object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::Metaflow.Result<TResource> result = default(global::Metaflow.Result<TResource>);
            setField2(ref result, (TResource)context.DeserializeInner(typeof(TResource)));
            setField1(ref result, (TResource)context.DeserializeInner(typeof(TResource)));
            setField0(ref result, (global::System.Boolean)context.DeserializeInner(typeof(global::System.Boolean)));
            setField3(ref result, (global::System.String)context.DeserializeInner(typeof(global::System.String)));
            setField4(ref result, (global::Metaflow.StateChange)context.DeserializeInner(typeof(global::Metaflow.StateChange)));
            return (global::Metaflow.Result<TResource>)result;
        }
    }
}

namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0")]
    internal sealed class OrleansCodeGenaa7c39ed46FeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::Metaflow.Orleans.IRestfulGrain<>), typeof(Metaflow.Orleans.OrleansCodeGenRestfulGrainReference<>), typeof(Metaflow.Orleans.OrleansCodeGenRestfulGrainMethodInvoker<>), -396090128));
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::Metaflow.Orleans.RestfulGrain<>)));
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddSerializerType(typeof(global::Metaflow.Result<>), typeof(OrleansGeneratedCode94C25308.OrleansCodeGenMetaflow_ResultSerializer<>));
            feature.AddKnownType(@"System.Action`9,System.Runtime", @"Action`9'9");
            feature.AddKnownType(@"System.Action`10,System.Runtime", @"Action`10'10");
            feature.AddKnownType(@"System.Action`11,System.Runtime", @"Action`11'11");
            feature.AddKnownType(@"System.Action`12,System.Runtime", @"Action`12'12");
            feature.AddKnownType(@"System.Action`13,System.Runtime", @"Action`13'13");
            feature.AddKnownType(@"System.Action`14,System.Runtime", @"Action`14'14");
            feature.AddKnownType(@"System.Action`15,System.Runtime", @"Action`15'15");
            feature.AddKnownType(@"System.Action`16,System.Runtime", @"Action`16'16");
            feature.AddKnownType(@"System.Func`10,System.Runtime", @"Func`10'10");
            feature.AddKnownType(@"System.Func`11,System.Runtime", @"Func`11'11");
            feature.AddKnownType(@"System.Func`12,System.Runtime", @"Func`12'12");
            feature.AddKnownType(@"System.Func`13,System.Runtime", @"Func`13'13");
            feature.AddKnownType(@"System.Func`14,System.Runtime", @"Func`14'14");
            feature.AddKnownType(@"System.Func`15,System.Runtime", @"Func`15'15");
            feature.AddKnownType(@"System.Func`16,System.Runtime", @"Func`16'16");
            feature.AddKnownType(@"System.Func`17,System.Runtime", @"Func`17'17");
            feature.AddKnownType(@"System.Lazy`2,System.Runtime", @"Lazy`2'2");
            feature.AddKnownType(@"System.Threading.WaitHandleExtensions,System.Runtime", @"WaitHandleExtensions");
            feature.AddKnownType(@"System.Runtime.AssemblyTargetedPatchBandAttribute,System.Runtime", @"AssemblyTargetedPatchBandAttribute");
            feature.AddKnownType(@"System.Runtime.TargetedPatchingOptOutAttribute,System.Runtime", @"TargetedPatchingOptOutAttribute");
            feature.AddKnownType(@"System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute,System.Runtime", @"PrePrepareMethodAttribute");
            feature.AddKnownType(@"System.Runtime.CompilerServices.EnumeratorCancellationAttribute,System.Runtime", @"EnumeratorCancellationAttribute");
            feature.AddKnownType(@"System.Reflection.RuntimeReflectionExtensions,System.Runtime", @"RuntimeReflectionExtensions");
            feature.AddKnownType(@"System.IO.FileAttributes,System.Runtime", @"FileAttributes");
            feature.AddKnownType(@"System.IO.HandleInheritability,System.Runtime", @"HandleInheritability");
            feature.AddKnownType(@"FxResources.System.Collections.SR,System.Collections", @"FxResources.System.Collections.SR");
            feature.AddKnownType(@"System.SR,System.Collections", @"SR");
            feature.AddKnownType(@"System.Collections.BitArray,System.Collections", @"BitArray");
            feature.AddKnownType(@"System.Collections.StructuralComparisons,System.Collections", @"StructuralComparisons");
            feature.AddKnownType(@"System.Collections.StructuralEqualityComparer,System.Collections", @"StructuralEqualityComparer");
            feature.AddKnownType(@"System.Collections.StructuralComparer,System.Collections", @"StructuralComparer");
            feature.AddKnownType(@"System.Collections.HashHelpers,System.Collections", @"HashHelpers");
            feature.AddKnownType(@"System.Collections.Generic.BitHelper,System.Collections", @"BitHelper");
            feature.AddKnownType(@"System.Collections.Generic.CollectionExtensions,System.Collections", @"CollectionExtensions");
            feature.AddKnownType(@"System.Collections.Generic.ICollectionDebugView`1,System.Collections", @"ICollectionDebugView`1'1");
            feature.AddKnownType(@"System.Collections.Generic.IDictionaryDebugView`2,System.Collections", @"IDictionaryDebugView`2'2");
            feature.AddKnownType(@"System.Collections.Generic.DictionaryKeyCollectionDebugView`2,System.Collections", @"DictionaryKeyCollectionDebugView`2'2");
            feature.AddKnownType(@"System.Collections.Generic.DictionaryValueCollectionDebugView`2,System.Collections", @"DictionaryValueCollectionDebugView`2'2");
            feature.AddKnownType(@"System.Collections.Generic.HashSet`1+ElementCount,System.Collections", @"ElementCount'1");
            feature.AddKnownType(@"System.Collections.Generic.HashSet`1+Slot,System.Collections", @"Slot'1");
            feature.AddKnownType(@"System.Collections.Generic.HashSet`1+Enumerator,System.Collections", @"HashSet`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.HashSetEqualityComparer`1,System.Collections", @"HashSetEqualityComparer`1'1");
            feature.AddKnownType(@"System.Collections.Generic.LinkedList`1+Enumerator,System.Collections", @"LinkedList`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.LinkedListNode`1,System.Collections", @"LinkedListNode`1'1");
            feature.AddKnownType(@"System.Collections.Generic.Queue`1+Enumerator,System.Collections", @"Queue`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.QueueDebugView`1,System.Collections", @"QueueDebugView`1'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+Enumerator,System.Collections", @"SortedDictionary`2'2.Enumerator'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+KeyCollection,System.Collections", @"SortedDictionary`2'2.KeyCollection'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator,System.Collections", @"SortedDictionary`2'2.KeyCollection'2.Enumerator'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+ValueCollection,System.Collections", @"SortedDictionary`2'2.ValueCollection'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator,System.Collections", @"SortedDictionary`2'2.ValueCollection'2.Enumerator'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+KeyValuePairComparer,System.Collections", @"SortedDictionary`2'2.KeyValuePairComparer'2");
            feature.AddKnownType(@"System.Collections.Generic.TreeSet`1,System.Collections", @"TreeSet`1'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedList`2+KeyList,System.Collections", @"SortedList`2'2.KeyList'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedList`2+ValueList,System.Collections", @"SortedList`2'2.ValueList'2");
            feature.AddKnownType(@"System.Collections.Generic.NodeColor,System.Collections", @"NodeColor");
            feature.AddKnownType(@"System.Collections.Generic.TreeWalkPredicate`1,System.Collections", @"TreeWalkPredicate`1'1");
            feature.AddKnownType(@"System.Collections.Generic.TreeRotation,System.Collections", @"TreeRotation");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+Node,System.Collections", @"Node'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+Enumerator,System.Collections", @"SortedSet`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+ElementCount,System.Collections", @"ElementCount'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+TreeSubSet,System.Collections", @"TreeSubSet'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSetEqualityComparer`1,System.Collections", @"SortedSetEqualityComparer`1'1");
            feature.AddKnownType(@"System.Collections.Generic.Stack`1+Enumerator,System.Collections", @"Stack`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.StackDebugView`1,System.Collections", @"StackDebugView`1'1");
            feature.AddKnownType(@"System.Collections.Generic.EnumerableHelpers,System.Collections", @"EnumerableHelpers");
            feature.AddKnownType(@"FxResources.System.Linq.SR,System.Linq", @"FxResources.System.Linq.SR");
            feature.AddKnownType(@"System.SR,System.Linq", @"SR");
            feature.AddKnownType(@"System.Collections.Generic.LargeArrayBuilder`1,System.Linq", @"LargeArrayBuilder`1'1");
            feature.AddKnownType(@"System.Collections.Generic.ArrayBuilder`1,System.Linq", @"ArrayBuilder`1'1");
            feature.AddKnownType(@"System.Collections.Generic.EnumerableHelpers,System.Linq", @"EnumerableHelpers");
            feature.AddKnownType(@"System.Collections.Generic.CopyPosition,System.Linq", @"CopyPosition");
            feature.AddKnownType(@"System.Collections.Generic.Marker,System.Linq", @"Marker");
            feature.AddKnownType(@"System.Collections.Generic.SparseArrayBuilder`1,System.Linq", @"SparseArrayBuilder`1'1");
            feature.AddKnownType(@"System.Linq.Enumerable,System.Linq", @"Enumerable");
            feature.AddKnownType(@"System.Linq.Enumerable+Iterator`1,System.Linq", @"Iterator`1'1");
            feature.AddKnownType(@"System.Linq.IIListProvider`1,System.Linq", @"IIListProvider`1'1");
            feature.AddKnownType(@"System.Linq.IPartition`1,System.Linq", @"IPartition`1'1");
            feature.AddKnownType(@"System.Linq.Enumerable+WhereArrayIterator`1,System.Linq", @"WhereArrayIterator`1'1");
            feature.AddKnownType(@"System.Linq.GroupedResultEnumerable`4,System.Linq", @"GroupedResultEnumerable`4'4");
            feature.AddKnownType(@"System.Linq.GroupedResultEnumerable`3,System.Linq", @"GroupedResultEnumerable`3'3");
            feature.AddKnownType(@"System.Linq.GroupedEnumerable`3,System.Linq", @"GroupedEnumerable`3'3");
            feature.AddKnownType(@"System.Linq.IGrouping`2,System.Linq", @"IGrouping`2'2");
            feature.AddKnownType(@"System.Linq.GroupedEnumerable`2,System.Linq", @"GroupedEnumerable`2'2");
            feature.AddKnownType(@"System.Linq.Lookup`2,System.Linq", @"Lookup`2'2");
            feature.AddKnownType(@"System.Linq.ILookup`2,System.Linq", @"ILookup`2'2");
            feature.AddKnownType(@"System.Linq.OrderedEnumerable`1,System.Linq", @"OrderedEnumerable`1'1");
            feature.AddKnownType(@"System.Linq.IOrderedEnumerable`1,System.Linq", @"IOrderedEnumerable`1'1");
            feature.AddKnownType(@"System.Linq.EmptyPartition`1,System.Linq", @"EmptyPartition`1'1");
            feature.AddKnownType(@"System.Linq.OrderedPartition`1,System.Linq", @"OrderedPartition`1'1");
            feature.AddKnownType(@"System.Linq.Buffer`1,System.Linq", @"Buffer`1'1");
            feature.AddKnownType(@"System.Linq.SystemCore_EnumerableDebugView`1,System.Linq", @"SystemCore_EnumerableDebugView`1'1");
            feature.AddKnownType(@"System.Linq.SystemCore_EnumerableDebugViewEmptyException,System.Linq", @"SystemCore_EnumerableDebugViewEmptyException");
            feature.AddKnownType(@"System.Linq.SystemCore_EnumerableDebugView,System.Linq", @"SystemCore_EnumerableDebugView");
            feature.AddKnownType(@"System.Linq.SystemLinq_GroupingDebugView`2,System.Linq", @"SystemLinq_GroupingDebugView`2'2");
            feature.AddKnownType(@"System.Linq.SystemLinq_LookupDebugView`2,System.Linq", @"SystemLinq_LookupDebugView`2'2");
            feature.AddKnownType(@"System.Linq.Grouping`2,System.Linq", @"Grouping`2'2");
            feature.AddKnownType(@"System.Linq.OrderedEnumerable`2,System.Linq", @"OrderedEnumerable`2'2");
            feature.AddKnownType(@"System.Linq.CachingComparer`1,System.Linq", @"CachingComparer`1'1");
            feature.AddKnownType(@"System.Linq.CachingComparer`2,System.Linq", @"CachingComparer`2'2");
            feature.AddKnownType(@"System.Linq.CachingComparerWithChild`2,System.Linq", @"CachingComparerWithChild`2'2");
            feature.AddKnownType(@"System.Linq.EnumerableSorter`1,System.Linq", @"EnumerableSorter`1'1");
            feature.AddKnownType(@"System.Linq.EnumerableSorter`2,System.Linq", @"EnumerableSorter`2'2");
            feature.AddKnownType(@"System.Linq.Set`1,System.Linq", @"Set`1'1");
            feature.AddKnownType(@"System.Linq.SingleLinkedNode`1,System.Linq", @"SingleLinkedNode`1'1");
            feature.AddKnownType(@"System.Linq.ThrowHelper,System.Linq", @"ThrowHelper");
            feature.AddKnownType(@"System.Linq.ExceptionArgument,System.Linq", @"ExceptionArgument");
            feature.AddKnownType(@"System.Linq.Utilities,System.Linq", @"Utilities");
            feature.AddKnownType(@"Orleans.PublicOrleansTaskExtensions,Orleans.Core.Abstractions", @"Orleans.PublicOrleansTaskExtensions");
            feature.AddKnownType(@"Orleans.GrainExtensions,Orleans.Core.Abstractions", @"Orleans.GrainExtensions");
            feature.AddKnownType(@"Orleans.GrainCallFilterDelegate,Orleans.Core.Abstractions", @"Orleans.GrainCallFilterDelegate");
            feature.AddKnownType(@"Orleans.OutgoingGrainCallFilterDelegate,Orleans.Core.Abstractions", @"Orleans.OutgoingGrainCallFilterDelegate");
            feature.AddKnownType(@"Orleans.IncomingGrainCallFilterDelegate,Orleans.Core.Abstractions", @"Orleans.IncomingGrainCallFilterDelegate");
            feature.AddKnownType(@"Orleans.JenkinsHash,Orleans.Core.Abstractions", @"Orleans.JenkinsHash");
            feature.AddKnownType(@"Orleans.InternerConstants,Orleans.Core.Abstractions", @"Orleans.InternerConstants");
            feature.AddKnownType(@"Orleans.LifecycleExtensions,Orleans.Core.Abstractions", @"Orleans.LifecycleExtensions");
            feature.AddKnownType(@"Orleans.Streams.StreamFilterPredicate,Orleans.Core.Abstractions", @"Orleans.Streams.StreamFilterPredicate");
            feature.AddKnownType(@"Orleans.Streams.StreamSequenceTokenUtilities,Orleans.Core.Abstractions", @"Orleans.Streams.StreamSequenceTokenUtilities");
            feature.AddKnownType(@"Orleans.Streams.AsyncBatchObservableExtensions,Orleans.Core.Abstractions", @"Orleans.Streams.AsyncBatchObservableExtensions");
            feature.AddKnownType(@"Orleans.Streams.AsyncObservableExtensions,Orleans.Core.Abstractions", @"Orleans.Streams.AsyncObservableExtensions");
            feature.AddKnownType(@"Orleans.Streams.StreamSubscriptionHandleExtensions,Orleans.Core.Abstractions", @"Orleans.Streams.StreamSubscriptionHandleExtensions");
            feature.AddKnownType(@"Orleans.Providers.ProviderConstants,Orleans.Core.Abstractions", @"Orleans.Providers.ProviderConstants");
            feature.AddKnownType(@"Orleans.Concurrency.ImmutableExt,Orleans.Core.Abstractions", @"Orleans.Concurrency.ImmutableExt");
            feature.AddKnownType(@"Orleans.Serialization.ValueTypeSetter`2,Orleans.Core.Abstractions", @"Orleans.Serialization.ValueTypeSetter`2'2");
            feature.AddKnownType(@"Orleans.Serialization.Deserializer,Orleans.Core.Abstractions", @"Orleans.Serialization.Deserializer");
            feature.AddKnownType(@"Orleans.Serialization.Serializer,Orleans.Core.Abstractions", @"Orleans.Serialization.Serializer");
            feature.AddKnownType(@"Orleans.Serialization.DeepCopier,Orleans.Core.Abstractions", @"Orleans.Serialization.DeepCopier");
            feature.AddKnownType(@"Orleans.CodeGeneration.GrainFactoryBase,Orleans.Core.Abstractions", @"Orleans.CodeGeneration.GrainFactoryBase");
            feature.AddKnownType(@"Orleans.CodeGeneration.InvokeMethodOptionsExtensions,Orleans.Core.Abstractions", @"Orleans.CodeGeneration.InvokeMethodOptionsExtensions");
            feature.AddKnownType(@"Orleans.Runtime.GrainLifecycleStage,Orleans.Core.Abstractions", @"Orleans.Runtime.GrainLifecycleStage");
            feature.AddKnownType(@"Orleans.Runtime.RequestContext,Orleans.Core.Abstractions", @"Orleans.Runtime.RequestContext");
            feature.AddKnownType(@"Orleans.Runtime.KeyedServiceCollectionExtensions,Orleans.Core.Abstractions", @"Orleans.Runtime.KeyedServiceCollectionExtensions");
            feature.AddKnownType(@"OrleansGeneratedCode.OrleansCodeGeneaae2f14cdFeaturePopulator,Orleans.Core", @"OrleansGeneratedCode.OrleansCodeGeneaae2f14cdFeaturePopulator");
            feature.AddKnownType(@"Orleans.ApplicationPartManagerExtensions,Orleans.Core", @"Orleans.ApplicationPartManagerExtensions");
            feature.AddKnownType(@"Orleans.TaskDone,Orleans.Core", @"Orleans.TaskDone");
            feature.AddKnownType(@"Orleans.OptionFormattingUtilities,Orleans.Core", @"Orleans.OptionFormattingUtilities");
            feature.AddKnownType(@"Orleans.ClientBuilderExtensions,Orleans.Core", @"Orleans.ClientBuilderExtensions");
            feature.AddKnownType(@"Orleans.ClientBuilderGrainCallFilterExtensions,Orleans.Core", @"Orleans.ClientBuilderGrainCallFilterExtensions");
            feature.AddKnownType(@"Orleans.DefaultClientServices,Orleans.Core", @"Orleans.DefaultClientServices");
            feature.AddKnownType(@"Orleans.ConnectionToClusterLostHandler,Orleans.Core", @"Orleans.ConnectionToClusterLostHandler");
            feature.AddKnownType(@"Orleans.GatewayCountChangedHandler,Orleans.Core", @"Orleans.GatewayCountChangedHandler");
            feature.AddKnownType(@"Orleans.GrainCasterFactory,Orleans.Core", @"Orleans.GrainCasterFactory");
            feature.AddKnownType(@"Orleans.ServiceLifecycleStage,Orleans.Core", @"Orleans.ServiceLifecycleStage");
            feature.AddKnownType(@"Orleans.Factory`1,Orleans.Core", @"Orleans.Factory`1'1");
            feature.AddKnownType(@"Orleans.Factory`2,Orleans.Core", @"Orleans.Factory`2'2");
            feature.AddKnownType(@"Orleans.Factory`3,Orleans.Core", @"Orleans.Factory`3'3");
            feature.AddKnownType(@"Orleans.Factory`4,Orleans.Core", @"Orleans.Factory`4'4");
            feature.AddKnownType(@"Orleans.NamedOptionExtensions,Orleans.Core", @"Orleans.NamedOptionExtensions");
            feature.AddKnownType(@"Orleans.SetExtensions,Orleans.Core", @"Orleans.SetExtensions");
            feature.AddKnownType(@"Orleans.OrleansCodeGenMembershipTableSystemTargetMethodInvoker,Orleans.Core", @"Orleans.OrleansCodeGenMembershipTableSystemTargetMethodInvoker");
            feature.AddKnownType(@"Orleans.OrleansCodeGenMembershipTableSystemTargetReference,Orleans.Core", @"Orleans.OrleansCodeGenMembershipTableSystemTargetReference");
            feature.AddKnownType(@"Orleans.OrleansCodeGenReminderTableGrainMethodInvoker,Orleans.Core", @"Orleans.OrleansCodeGenReminderTableGrainMethodInvoker");
            feature.AddKnownType(@"Orleans.OrleansCodeGenReminderTableGrainReference,Orleans.Core", @"Orleans.OrleansCodeGenReminderTableGrainReference");
            feature.AddKnownType(@"Orleans.OrleansCodeGenSiloControlMethodInvoker,Orleans.Core", @"Orleans.OrleansCodeGenSiloControlMethodInvoker");
            feature.AddKnownType(@"Orleans.OrleansCodeGenSiloControlReference,Orleans.Core", @"Orleans.OrleansCodeGenSiloControlReference");
            feature.AddKnownType(@"Orleans.OrleansCodeGenReminderServiceMethodInvoker,Orleans.Core", @"Orleans.OrleansCodeGenReminderServiceMethodInvoker");
            feature.AddKnownType(@"Orleans.OrleansCodeGenReminderServiceReference,Orleans.Core", @"Orleans.OrleansCodeGenReminderServiceReference");
            feature.AddKnownType(@"Orleans.OrleansCodeGenRemindableMethodInvoker,Orleans.Core", @"Orleans.OrleansCodeGenRemindableMethodInvoker");
            feature.AddKnownType(@"Orleans.OrleansCodeGenRemindableReference,Orleans.Core", @"Orleans.OrleansCodeGenRemindableReference");
            feature.AddKnownType(@"Orleans.Services.OrleansCodeGenGrainServiceMethodInvoker,Orleans.Core", @"Orleans.Services.OrleansCodeGenGrainServiceMethodInvoker");
            feature.AddKnownType(@"Orleans.Services.OrleansCodeGenGrainServiceReference,Orleans.Core", @"Orleans.Services.OrleansCodeGenGrainServiceReference");
            feature.AddKnownType(@"Orleans.Utilities.RuntimeTypeNameFormatter,Orleans.Core", @"Orleans.Utilities.RuntimeTypeNameFormatter");
            feature.AddKnownType(@"Orleans.Transactions.TransactionalStatusExtensions,Orleans.Core", @"Orleans.Transactions.TransactionalStatusExtensions");
            feature.AddKnownType(@"Orleans.Transactions.TransactionContext,Orleans.Core", @"Orleans.Transactions.TransactionContext");
            feature.AddKnownType(@"Orleans.Timers.Internal.TimerManager,Orleans.Core", @"Orleans.Timers.Internal.TimerManager");
            feature.AddKnownType(@"Orleans.Timers.Internal.TimerManager`1,Orleans.Core", @"Orleans.Timers.Internal.TimerManager`1'1");
            feature.AddKnownType(@"Orleans.Timers.Internal.LinkedList,Orleans.Core", @"Orleans.Timers.Internal.LinkedList");
            feature.AddKnownType(@"Orleans.SystemTargetInterfaces.OrleansCodeGenClusterGrainDirectoryMethodInvoker,Orleans.Core", @"Orleans.SystemTargetInterfaces.OrleansCodeGenClusterGrainDirectoryMethodInvoker");
            feature.AddKnownType(@"Orleans.SystemTargetInterfaces.OrleansCodeGenClusterGrainDirectoryReference,Orleans.Core", @"Orleans.SystemTargetInterfaces.OrleansCodeGenClusterGrainDirectoryReference");
            feature.AddKnownType(@"Orleans.SystemTargetInterfaces.OrleansCodeGenLogConsistencyProtocolGatewayMethodInvoker,Orleans.Core", @"Orleans.SystemTargetInterfaces.OrleansCodeGenLogConsistencyProtocolGatewayMethodInvoker");
            feature.AddKnownType(@"Orleans.SystemTargetInterfaces.OrleansCodeGenLogConsistencyProtocolGatewayReference,Orleans.Core", @"Orleans.SystemTargetInterfaces.OrleansCodeGenLogConsistencyProtocolGatewayReference");
            feature.AddKnownType(@"Orleans.Serialization.BinaryTokenStreamReaderExtensinons,Orleans.Core", @"Orleans.Serialization.BinaryTokenStreamReaderExtensinons");
            feature.AddKnownType(@"Orleans.Serialization.BinaryTokenStreamWriterExtensions,Orleans.Core", @"Orleans.Serialization.BinaryTokenStreamWriterExtensions");
            feature.AddKnownType(@"Orleans.Serialization.BuiltInTypes,Orleans.Core", @"Orleans.Serialization.BuiltInTypes");
            feature.AddKnownType(@"Orleans.Serialization.DeserializationContextExtensions,Orleans.Core", @"Orleans.Serialization.DeserializationContextExtensions");
            feature.AddKnownType(@"Orleans.Serialization.DotNetSerializableUtilities,Orleans.Core", @"Orleans.Serialization.DotNetSerializableUtilities");
            feature.AddKnownType(@"Orleans.Serialization.OrleansSerializer,Orleans.Core", @"Orleans.Serialization.OrleansSerializer");
            feature.AddKnownType(@"Orleans.Serialization.SerializationContextExtensions,Orleans.Core", @"Orleans.Serialization.SerializationContextExtensions");
            feature.AddKnownType(@"Orleans.Serialization.SerializerContextExtensions,Orleans.Core", @"Orleans.Serialization.SerializerContextExtensions");
            feature.AddKnownType(@"Orleans.Serialization.SerializerFeatureExtensions,Orleans.Core", @"Orleans.Serialization.SerializerFeatureExtensions");
            feature.AddKnownType(@"Orleans.Serialization.TypeUtilities,Orleans.Core", @"Orleans.Serialization.TypeUtilities");
            feature.AddKnownType(@"Orleans.Storage.GrainStorageExtensions,Orleans.Core", @"Orleans.Storage.GrainStorageExtensions");
            feature.AddKnownType(@"Orleans.Storage.OrleansCodeGenMemoryStorageGrainMethodInvoker,Orleans.Core", @"Orleans.Storage.OrleansCodeGenMemoryStorageGrainMethodInvoker");
            feature.AddKnownType(@"Orleans.Storage.OrleansCodeGenMemoryStorageGrainReference,Orleans.Core", @"Orleans.Storage.OrleansCodeGenMemoryStorageGrainReference");
            feature.AddKnownType(@"Orleans.Providers.ProviderConfigurationExtensions,Orleans.Core", @"Orleans.Providers.ProviderConfigurationExtensions");
            feature.AddKnownType(@"Orleans.Networking.Shared.BufferExtensions,Orleans.Core", @"Orleans.Networking.Shared.BufferExtensions");
            feature.AddKnownType(@"Orleans.Networking.Shared.CorrelationIdGenerator,Orleans.Core", @"Orleans.Networking.Shared.CorrelationIdGenerator");
            feature.AddKnownType(@"Orleans.Networking.Shared.KestrelMemoryPool,Orleans.Core", @"Orleans.Networking.Shared.KestrelMemoryPool");
            feature.AddKnownType(@"Orleans.Networking.Shared.SocketExtensions,Orleans.Core", @"Orleans.Networking.Shared.SocketExtensions");
            feature.AddKnownType(@"Orleans.MultiCluster.OrleansCodeGenLogConsistencyProtocolParticipantMethodInvoker,Orleans.Core", @"Orleans.MultiCluster.OrleansCodeGenLogConsistencyProtocolParticipantMethodInvoker");
            feature.AddKnownType(@"Orleans.MultiCluster.OrleansCodeGenLogConsistencyProtocolParticipantReference,Orleans.Core", @"Orleans.MultiCluster.OrleansCodeGenLogConsistencyProtocolParticipantReference");
            feature.AddKnownType(@"Orleans.Streams.ImplicitConsumerGrainExtensions,Orleans.Core", @"Orleans.Streams.ImplicitConsumerGrainExtensions");
            feature.AddKnownType(@"Orleans.Streams.SubscriptionMarker,Orleans.Core", @"Orleans.Streams.SubscriptionMarker");
            feature.AddKnownType(@"Orleans.Streams.QueueAdapterExtensions,Orleans.Core", @"Orleans.Streams.QueueAdapterExtensions");
            feature.AddKnownType(@"Orleans.Streams.QueueAdapterConstants,Orleans.Core", @"Orleans.Streams.QueueAdapterConstants");
            feature.AddKnownType(@"Orleans.Streams.OrleansCodeGenStreamConsumerExtensionMethodInvoker,Orleans.Core", @"Orleans.Streams.OrleansCodeGenStreamConsumerExtensionMethodInvoker");
            feature.AddKnownType(@"Orleans.Streams.OrleansCodeGenStreamConsumerExtensionReference,Orleans.Core", @"Orleans.Streams.OrleansCodeGenStreamConsumerExtensionReference");
            feature.AddKnownType(@"Orleans.Streams.OrleansCodeGenStreamProducerExtensionMethodInvoker,Orleans.Core", @"Orleans.Streams.OrleansCodeGenStreamProducerExtensionMethodInvoker");
            feature.AddKnownType(@"Orleans.Streams.OrleansCodeGenStreamProducerExtensionReference,Orleans.Core", @"Orleans.Streams.OrleansCodeGenStreamProducerExtensionReference");
            feature.AddKnownType(@"Orleans.Streams.OrleansCodeGenPersistentStreamPullingAgentMethodInvoker,Orleans.Core", @"Orleans.Streams.OrleansCodeGenPersistentStreamPullingAgentMethodInvoker");
            feature.AddKnownType(@"Orleans.Streams.OrleansCodeGenPersistentStreamPullingAgentReference,Orleans.Core", @"Orleans.Streams.OrleansCodeGenPersistentStreamPullingAgentReference");
            feature.AddKnownType(@"Orleans.Streams.OrleansCodeGenPersistentStreamPullingManagerMethodInvoker,Orleans.Core", @"Orleans.Streams.OrleansCodeGenPersistentStreamPullingManagerMethodInvoker");
            feature.AddKnownType(@"Orleans.Streams.OrleansCodeGenPersistentStreamPullingManagerReference,Orleans.Core", @"Orleans.Streams.OrleansCodeGenPersistentStreamPullingManagerReference");
            feature.AddKnownType(@"Orleans.Streams.OrleansCodeGenPubSubRendezvousGrainMethodInvoker,Orleans.Core", @"Orleans.Streams.OrleansCodeGenPubSubRendezvousGrainMethodInvoker");
            feature.AddKnownType(@"Orleans.Streams.OrleansCodeGenPubSubRendezvousGrainReference,Orleans.Core", @"Orleans.Streams.OrleansCodeGenPubSubRendezvousGrainReference");
            feature.AddKnownType(@"Orleans.Streams.PubSub.StreamSubscriptionManagerExtensions,Orleans.Core", @"Orleans.Streams.PubSub.StreamSubscriptionManagerExtensions");
            feature.AddKnownType(@"Orleans.Streams.Core.StreamSubscriptionManagerType,Orleans.Core", @"Orleans.Streams.Core.StreamSubscriptionManagerType");
            feature.AddKnownType(@"Orleans.Hosting.NamedServiceConfiguratorExtensions,Orleans.Core", @"Orleans.Hosting.NamedServiceConfiguratorExtensions");
            feature.AddKnownType(@"Orleans.Hosting.GrainCallFilterExtensions,Orleans.Core", @"Orleans.Hosting.GrainCallFilterExtensions");
            feature.AddKnownType(@"Orleans.Hosting.EnvironmentName,Orleans.Core", @"Orleans.Hosting.EnvironmentName");
            feature.AddKnownType(@"Orleans.Hosting.HostDefaults,Orleans.Core", @"Orleans.Hosting.HostDefaults");
            feature.AddKnownType(@"Orleans.Hosting.ClientStreamExtensions,Orleans.Core", @"Orleans.Hosting.ClientStreamExtensions");
            feature.AddKnownType(@"Orleans.Hosting.PersistentStreamConfiguratorExtensions,Orleans.Core", @"Orleans.Hosting.PersistentStreamConfiguratorExtensions");
            feature.AddKnownType(@"Orleans.Hosting.ClusterClientPersistentStreamConfiguratorExtensions,Orleans.Core", @"Orleans.Hosting.ClusterClientPersistentStreamConfiguratorExtensions");
            feature.AddKnownType(@"Orleans.Configuration.OptionConfigureExtensionMethods,Orleans.Core", @"Orleans.Configuration.OptionConfigureExtensionMethods");
            feature.AddKnownType(@"Orleans.Configuration.TelemetryOptionsExtensions,Orleans.Core", @"Orleans.Configuration.TelemetryOptionsExtensions");
            feature.AddKnownType(@"Orleans.Configuration.Internal.ServiceCollectionExtensions,Orleans.Core", @"Orleans.Configuration.Internal.ServiceCollectionExtensions");
            feature.AddKnownType(@"Orleans.Configuration.Overrides.OptionsOverrides,Orleans.Core", @"Orleans.Configuration.Overrides.OptionsOverrides");
            feature.AddKnownType(@"Orleans.CodeGeneration.GrainInterfaceUtils,Orleans.Core", @"Orleans.CodeGeneration.GrainInterfaceUtils");
            feature.AddKnownType(@"Orleans.Internal.AsyncExecutorWithRetries,Orleans.Core", @"Orleans.Internal.AsyncExecutorWithRetries");
            feature.AddKnownType(@"Orleans.Internal.OrleansTaskExtentions,Orleans.Core", @"Orleans.Internal.OrleansTaskExtentions");
            feature.AddKnownType(@"Orleans.Internal.StandardExtensions,Orleans.Core", @"Orleans.Internal.StandardExtensions");
            feature.AddKnownType(@"Orleans.Runtime.AssemblyLoaderCriteria,Orleans.Core", @"Orleans.Runtime.AssemblyLoaderCriteria");
            feature.AddKnownType(@"Orleans.Runtime.TypeUtils,Orleans.Core", @"Orleans.Runtime.TypeUtils");
            feature.AddKnownType(@"Orleans.Runtime.GrainIdExtensions,Orleans.Core", @"Orleans.Runtime.GrainIdExtensions");
            feature.AddKnownType(@"Orleans.Runtime.LifecycleParticipantExtensions,Orleans.Core", @"Orleans.Runtime.LifecycleParticipantExtensions");
            feature.AddKnownType(@"Orleans.Runtime.ConsoleText,Orleans.Core", @"Orleans.Runtime.ConsoleText");
            feature.AddKnownType(@"Orleans.Runtime.OrleansLoggerExtension,Orleans.Core", @"Orleans.Runtime.OrleansLoggerExtension");
            feature.AddKnownType(@"Orleans.Runtime.LogFormatter,Orleans.Core", @"Orleans.Runtime.LogFormatter");
            feature.AddKnownType(@"Orleans.Runtime.MessageExtensions,Orleans.Core", @"Orleans.Runtime.MessageExtensions");
            feature.AddKnownType(@"Orleans.Runtime.GrainReferenceExtensions,Orleans.Core", @"Orleans.Runtime.GrainReferenceExtensions");
            feature.AddKnownType(@"Orleans.Runtime.RequestContextExtensions,Orleans.Core", @"Orleans.Runtime.RequestContextExtensions");
            feature.AddKnownType(@"Orleans.Runtime.RangeFactory,Orleans.Core", @"Orleans.Runtime.RangeFactory");
            feature.AddKnownType(@"Orleans.Runtime.SiloStatusExtensions,Orleans.Core", @"Orleans.Runtime.SiloStatusExtensions");
            feature.AddKnownType(@"Orleans.Runtime.Metric,Orleans.Core", @"Orleans.Runtime.Metric");
            feature.AddKnownType(@"Orleans.Runtime.StatisticsLevelExtensions,Orleans.Core", @"Orleans.Runtime.StatisticsLevelExtensions");
            feature.AddKnownType(@"Orleans.Runtime.TimeIntervalFactory,Orleans.Core", @"Orleans.Runtime.TimeIntervalFactory");
            feature.AddKnownType(@"Orleans.Runtime.TraceParserUtils,Orleans.Core", @"Orleans.Runtime.TraceParserUtils");
            feature.AddKnownType(@"Orleans.Runtime.NonCapturingTimer,Orleans.Core", @"Orleans.Runtime.NonCapturingTimer");
            feature.AddKnownType(@"Orleans.Runtime.KeyedServiceExtensions,Orleans.Core", @"Orleans.Runtime.KeyedServiceExtensions");
            feature.AddKnownType(@"Orleans.Runtime.Utils,Orleans.Core", @"Orleans.Runtime.Utils");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenClientObserverRegistrarMethodInvoker,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenClientObserverRegistrarMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenClientObserverRegistrarReference,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenClientObserverRegistrarReference");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenClusterTypeManagerMethodInvoker,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenClusterTypeManagerMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenClusterTypeManagerReference,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenClusterTypeManagerReference");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenSiloTypeManagerMethodInvoker,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenSiloTypeManagerMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenSiloTypeManagerReference,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenSiloTypeManagerReference");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenCatalogMethodInvoker,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenCatalogMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenCatalogReference,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenCatalogReference");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenDeploymentLoadPublisherMethodInvoker,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenDeploymentLoadPublisherMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenDeploymentLoadPublisherReference,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenDeploymentLoadPublisherReference");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenManagementGrainMethodInvoker,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenManagementGrainMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenManagementGrainReference,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenManagementGrainReference");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenMembershipServiceMethodInvoker,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenMembershipServiceMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenMembershipServiceReference,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenMembershipServiceReference");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenRemoteGrainDirectoryMethodInvoker,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenRemoteGrainDirectoryMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenRemoteGrainDirectoryReference,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenRemoteGrainDirectoryReference");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenCancellationSourcesExtensionMethodInvoker,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenCancellationSourcesExtensionMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.OrleansCodeGenCancellationSourcesExtensionReference,Orleans.Core", @"Orleans.Runtime.OrleansCodeGenCancellationSourcesExtensionReference");
            feature.AddKnownType(@"Orleans.Runtime.Messaging.ConnectionPreamble,Orleans.Core", @"Orleans.Runtime.Messaging.ConnectionPreamble");
            feature.AddKnownType(@"Orleans.Runtime.Configuration.ConfigUtilities,Orleans.Core", @"Orleans.Runtime.Configuration.ConfigUtilities");
            feature.AddKnownType(@"Orleans.Runtime.Configuration.LimitNames,Orleans.Core", @"Orleans.Runtime.Configuration.LimitNames");
            feature.AddKnownType(@"Orleans.GrainFactory+GrainReferenceCaster,Orleans.Core", @"Orleans.GrainReferenceCaster");
            feature.AddKnownType(@"Orleans.Runtime.AssemblyLoaderCriterion+Predicate,Orleans.Core", @"Orleans.Runtime.Predicate");
            feature.AddKnownType(@"Orleans.Runtime.AssemblyLoaderPathNameCriterion+Predicate,Orleans.Core", @"Orleans.Runtime.Predicate");
            feature.AddKnownType(@"Orleans.Runtime.AssemblyLoaderReflectionCriterion+AssemblyPredicate,Orleans.Core", @"Orleans.Runtime.AssemblyPredicate");
            feature.AddKnownType(@"Orleans.Runtime.AssemblyLoaderReflectionCriterion+TypePredicate,Orleans.Core", @"Orleans.Runtime.TypePredicate");
            feature.AddKnownType(@"Orleans.Runtime.GrainReferenceCache`2+FetchValueDelegate,Orleans.Core", @"Orleans.Runtime.Orleans.Runtime.GrainReferenceCache`2'2.FetchValueDelegate'2");
            feature.AddKnownType(@"Orleans.Runtime.GrainReferenceCache`2+CastDelegate,Orleans.Core", @"Orleans.Runtime.Orleans.Runtime.GrainReferenceCache`2'2.CastDelegate'2");
            feature.AddKnownType(@"Orleans.Runtime.LRU`2+FetchValueDelegate,Orleans.Core", @"Orleans.Runtime.Orleans.Runtime.LRU`2'2.FetchValueDelegate'2");
            feature.AddKnownType(@"Metaflow.Orleans.IRestfulGrain`1,Metaflow.Orleans", @"Metaflow.Orleans.IRestfulGrain`1'1");
            feature.AddKnownType(@"Metaflow.IRestful`1,Metaflow.Core", @"Metaflow.IRestful`1'1");
            feature.AddKnownType(@"Metaflow.Orleans.RestfulGrain`1,Metaflow.Orleans", @"Metaflow.Orleans.RestfulGrain`1'1");
            feature.AddKnownType(@"Orleans.EventSourcing.JournaledGrain`1,Orleans.EventSourcing", @"Orleans.EventSourcing.JournaledGrain`1'1");
            feature.AddKnownType(@"Orleans.EventSourcing.JournaledGrain`2,Orleans.EventSourcing", @"Orleans.EventSourcing.JournaledGrain`2'2");
            feature.AddKnownType(@"Metaflow.Orleans.StartupExtensions,Metaflow.Orleans", @"Metaflow.Orleans.StartupExtensions");
            feature.AddKnownType(@"Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions,Microsoft.Extensions.Options", @"Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions");
            feature.AddKnownType(@"Microsoft.Extensions.Options.Options,Microsoft.Extensions.Options", @"Microsoft.Extensions.Options.Options");
            feature.AddKnownType(@"Microsoft.Extensions.Options.OptionsMonitorExtensions,Microsoft.Extensions.Options", @"Microsoft.Extensions.Options.OptionsMonitorExtensions");
            feature.AddKnownType(@"Microsoft.Extensions.Options.Resources,Microsoft.Extensions.Options", @"Microsoft.Extensions.Options.Resources");
            feature.AddKnownType(@"Microsoft.Extensions.Configuration.ConfigurationExtensions,Microsoft.Extensions.Configuration.Abstractions", @"Microsoft.Extensions.Configuration.ConfigurationExtensions");
            feature.AddKnownType(@"Microsoft.Extensions.Configuration.ConfigurationPath,Microsoft.Extensions.Configuration.Abstractions", @"Microsoft.Extensions.Configuration.ConfigurationPath");
            feature.AddKnownType(@"Microsoft.Extensions.Configuration.ConfigurationRootExtensions,Microsoft.Extensions.Configuration.Abstractions", @"Microsoft.Extensions.Configuration.ConfigurationRootExtensions");
            feature.AddKnownType(@"Microsoft.Extensions.Configuration.ConfigurationBinder,Microsoft.Extensions.Configuration.Binder", @"Microsoft.Extensions.Configuration.ConfigurationBinder");
            feature.AddKnownType(@"Microsoft.Extensions.Configuration.Binder.Resources,Microsoft.Extensions.Configuration.Binder", @"Microsoft.Extensions.Configuration.Binder.Resources");
            feature.AddKnownType(@"Interop,System.Net.Primitives", @"Interop");
            feature.AddKnownType(@"Interop+Error,System.Net.Primitives", @"Error");
            feature.AddKnownType(@"Interop+ErrorInfo,System.Net.Primitives", @"ErrorInfo");
            feature.AddKnownType(@"Interop+Sys,System.Net.Primitives", @"Sys");
            feature.AddKnownType(@"InteropErrorExtensions,System.Net.Primitives", @"InteropErrorExtensions");
            feature.AddKnownType(@"FxResources.System.Net.Primitives.SR,System.Net.Primitives", @"FxResources.System.Net.Primitives.SR");
            feature.AddKnownType(@"System.IPv4AddressHelper,System.Net.Primitives", @"IPv4AddressHelper");
            feature.AddKnownType(@"System.IPv6AddressHelper,System.Net.Primitives", @"IPv6AddressHelper");
            feature.AddKnownType(@"System.StringExtensions,System.Net.Primitives", @"StringExtensions");
            feature.AddKnownType(@"System.Marvin,System.Net.Primitives", @"Marvin");
            feature.AddKnownType(@"System.NotImplemented,System.Net.Primitives", @"NotImplemented");
            feature.AddKnownType(@"System.SR,System.Net.Primitives", @"SR");
            feature.AddKnownType(@"System.Text.StringBuilderCache,System.Net.Primitives", @"StringBuilderCache");
            feature.AddKnownType(@"System.Security.Authentication.SslProtocols,System.Net.Primitives", @"SslProtocols");
            feature.AddKnownType(@"System.Security.Authentication.ExchangeAlgorithmType,System.Net.Primitives", @"ExchangeAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.CipherAlgorithmType,System.Net.Primitives", @"CipherAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.HashAlgorithmType,System.Net.Primitives", @"HashAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ChannelBinding,System.Net.Primitives", @"ChannelBinding");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ChannelBindingKind,System.Net.Primitives", @"ChannelBindingKind");
            feature.AddKnownType(@"System.Net.AuthenticationSchemes,System.Net.Primitives", @"AuthenticationSchemes");
            feature.AddKnownType(@"System.Net.CookieVariant,System.Net.Primitives", @"CookieVariant");
            feature.AddKnownType(@"System.Net.Cookie,System.Net.Primitives", @"Cookie");
            feature.AddKnownType(@"System.Net.HeaderVariantInfo,System.Net.Primitives", @"HeaderVariantInfo");
            feature.AddKnownType(@"System.Net.CookieContainer,System.Net.Primitives", @"CookieContainer");
            feature.AddKnownType(@"System.Net.PathList,System.Net.Primitives", @"PathList");
            feature.AddKnownType(@"System.Net.CookieCollection,System.Net.Primitives", @"CookieCollection");
            feature.AddKnownType(@"System.Net.CookieCollection+Stamp,System.Net.Primitives", @"Stamp");
            feature.AddKnownType(@"System.Net.CookieException,System.Net.Primitives", @"CookieException");
            feature.AddKnownType(@"System.Net.CredentialCache,System.Net.Primitives", @"CredentialCache");
            feature.AddKnownType(@"System.Net.ICredentials,System.Net.Primitives", @"ICredentials");
            feature.AddKnownType(@"System.Net.ICredentialsByHost,System.Net.Primitives", @"ICredentialsByHost");
            feature.AddKnownType(@"System.Net.CredentialKey,System.Net.Primitives", @"CredentialKey");
            feature.AddKnownType(@"System.Net.SystemNetworkCredential,System.Net.Primitives", @"SystemNetworkCredential");
            feature.AddKnownType(@"System.Net.NetworkCredential,System.Net.Primitives", @"NetworkCredential");
            feature.AddKnownType(@"System.Net.CredentialHostKey,System.Net.Primitives", @"CredentialHostKey");
            feature.AddKnownType(@"System.Net.DecompressionMethods,System.Net.Primitives", @"DecompressionMethods");
            feature.AddKnownType(@"System.Net.DnsEndPoint,System.Net.Primitives", @"DnsEndPoint");
            feature.AddKnownType(@"System.Net.EndPoint,System.Net.Primitives", @"EndPoint");
            feature.AddKnownType(@"System.Net.HttpStatusCode,System.Net.Primitives", @"HttpStatusCode");
            feature.AddKnownType(@"System.Net.HttpVersion,System.Net.Primitives", @"HttpVersion");
            feature.AddKnownType(@"System.Net.IPAddressParser,System.Net.Primitives", @"IPAddressParser");
            feature.AddKnownType(@"System.Net.IWebProxy,System.Net.Primitives", @"IWebProxy");
            feature.AddKnownType(@"System.Net.NetEventSource,System.Net.Primitives", @"NetEventSource");
            feature.AddKnownType(@"System.Net.NetEventSource+Keywords,System.Net.Primitives", @"NetEventSource.Keywords");
            feature.AddKnownType(@"System.Net.TransportContext,System.Net.Primitives", @"TransportContext");
            feature.AddKnownType(@"System.Net.CookieComparer,System.Net.Primitives", @"CookieComparer");
            feature.AddKnownType(@"System.Net.CookieToken,System.Net.Primitives", @"CookieToken");
            feature.AddKnownType(@"System.Net.CookieTokenizer,System.Net.Primitives", @"CookieTokenizer");
            feature.AddKnownType(@"System.Net.CookieParser,System.Net.Primitives", @"CookieParser");
            feature.AddKnownType(@"System.Net.TcpValidationHelpers,System.Net.Primitives", @"TcpValidationHelpers");
            feature.AddKnownType(@"System.Net.SocketAddress,System.Net.Primitives", @"SocketAddress");
            feature.AddKnownType(@"System.Net.SocketAddressPal,System.Net.Primitives", @"SocketAddressPal");
            feature.AddKnownType(@"System.Net.Cache.RequestCacheLevel,System.Net.Primitives", @"RequestCacheLevel");
            feature.AddKnownType(@"System.Net.Cache.RequestCachePolicy,System.Net.Primitives", @"RequestCachePolicy");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPAddressCollection,System.Net.Primitives", @"IPAddressCollection");
            feature.AddKnownType(@"System.Net.NetworkInformation.HostInformation,System.Net.Primitives", @"HostInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.HostInformationPal,System.Net.Primitives", @"HostInformationPal");
            feature.AddKnownType(@"System.Net.NetworkInformation.InterfaceInfoPal,System.Net.Primitives", @"InterfaceInfoPal");
            feature.AddKnownType(@"System.Net.Security.AuthenticationLevel,System.Net.Primitives", @"AuthenticationLevel");
            feature.AddKnownType(@"System.Net.Security.SslPolicyErrors,System.Net.Primitives", @"SslPolicyErrors");
            feature.AddKnownType(@"System.Net.Sockets.SocketException,System.Net.Primitives", @"SocketException");
            feature.AddKnownType(@"System.Net.Sockets.AddressFamily,System.Net.Primitives", @"AddressFamily");
            feature.AddKnownType(@"System.Net.Sockets.SocketError,System.Net.Primitives", @"SocketError");
            feature.AddKnownType(@"System.Net.Sockets.SocketErrorPal,System.Net.Primitives", @"SocketErrorPal");
            feature.AddKnownType(@"FxResources.System.Linq.Expressions.SR,System.Linq.Expressions", @"FxResources.System.Linq.Expressions.SR");
            feature.AddKnownType(@"System.SR,System.Linq.Expressions", @"SR");
            feature.AddKnownType(@"System.Runtime.CompilerServices.IRuntimeVariables,System.Linq.Expressions", @"IRuntimeVariables");
            feature.AddKnownType(@"System.Runtime.CompilerServices.RuntimeOps,System.Linq.Expressions", @"RuntimeOps");
            feature.AddKnownType(@"System.Runtime.CompilerServices.RuntimeOps+RuntimeVariables,System.Linq.Expressions", @"RuntimeVariables");
            feature.AddKnownType(@"System.Runtime.CompilerServices.RuntimeOps+MergedRuntimeVariables,System.Linq.Expressions", @"MergedRuntimeVariables");
            feature.AddKnownType(@"System.Linq.Expressions.ExpressionVisitor,System.Linq.Expressions", @"ExpressionVisitor");
            feature.AddKnownType(@"System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1,System.Linq.Expressions", @"ReadOnlyCollectionBuilder`1'1");
            feature.AddKnownType(@"System.Runtime.CompilerServices.RuleCache`1,System.Linq.Expressions", @"RuleCache`1'1");
            feature.AddKnownType(@"System.Runtime.CompilerServices.CallSite,System.Linq.Expressions", @"CallSite");
            feature.AddKnownType(@"System.Runtime.CompilerServices.CallSite`1,System.Linq.Expressions", @"CallSite`1'1");
            feature.AddKnownType(@"System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions", @"CallSiteBinder");
            feature.AddKnownType(@"System.Runtime.CompilerServices.CallSiteOps,System.Linq.Expressions", @"CallSiteOps");
            feature.AddKnownType(@"System.Runtime.CompilerServices.CallSiteHelpers,System.Linq.Expressions", @"CallSiteHelpers");
            feature.AddKnownType(@"System.Runtime.CompilerServices.DynamicAttribute,System.Linq.Expressions", @"DynamicAttribute");
            feature.AddKnownType(@"System.Runtime.CompilerServices.DebugInfoGenerator,System.Linq.Expressions", @"DebugInfoGenerator");
            feature.AddKnownType(@"System.Runtime.CompilerServices.TrueReadOnlyCollection`1,System.Linq.Expressions", @"TrueReadOnlyCollection`1'1");
            feature.AddKnownType(@"System.Runtime.CompilerServices.Closure,System.Linq.Expressions", @"Closure");
            feature.AddKnownType(@"System.Linq.IQueryable,System.Linq.Expressions", @"IQueryable");
            feature.AddKnownType(@"System.Linq.IQueryable`1,System.Linq.Expressions", @"IQueryable`1'1");
            feature.AddKnownType(@"System.Linq.IQueryProvider,System.Linq.Expressions", @"IQueryProvider");
            feature.AddKnownType(@"System.Linq.IOrderedQueryable,System.Linq.Expressions", @"IOrderedQueryable");
            feature.AddKnownType(@"System.Linq.IOrderedQueryable`1,System.Linq.Expressions", @"IOrderedQueryable`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.ArrayBuilderExtensions,System.Linq.Expressions", @"ArrayBuilderExtensions");
            feature.AddKnownType(@"System.Linq.Expressions.AnalyzeTypeIsResult,System.Linq.Expressions", @"AnalyzeTypeIsResult");
            feature.AddKnownType(@"System.Linq.Expressions.ConstantCheck,System.Linq.Expressions", @"ConstantCheck");
            feature.AddKnownType(@"System.Linq.Expressions.CachedReflectionInfo,System.Linq.Expressions", @"CachedReflectionInfo");
            feature.AddKnownType(@"System.Linq.Expressions.BinaryExpression,System.Linq.Expressions", @"BinaryExpression");
            feature.AddKnownType(@"System.Linq.Expressions.Expression,System.Linq.Expressions", @"Expression");
            feature.AddKnownType(@"System.Linq.Expressions.LogicalBinaryExpression,System.Linq.Expressions", @"LogicalBinaryExpression");
            feature.AddKnownType(@"System.Linq.Expressions.AssignBinaryExpression,System.Linq.Expressions", @"AssignBinaryExpression");
            feature.AddKnownType(@"System.Linq.Expressions.ByRefAssignBinaryExpression,System.Linq.Expressions", @"ByRefAssignBinaryExpression");
            feature.AddKnownType(@"System.Linq.Expressions.CoalesceConversionBinaryExpression,System.Linq.Expressions", @"CoalesceConversionBinaryExpression");
            feature.AddKnownType(@"System.Linq.Expressions.OpAssignMethodConversionBinaryExpression,System.Linq.Expressions", @"OpAssignMethodConversionBinaryExpression");
            feature.AddKnownType(@"System.Linq.Expressions.MethodBinaryExpression,System.Linq.Expressions", @"MethodBinaryExpression");
            feature.AddKnownType(@"System.Linq.Expressions.SimpleBinaryExpression,System.Linq.Expressions", @"SimpleBinaryExpression");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+BinaryExpressionProxy,System.Linq.Expressions", @"BinaryExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+BlockExpressionProxy,System.Linq.Expressions", @"BlockExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+CatchBlockProxy,System.Linq.Expressions", @"CatchBlockProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+ConditionalExpressionProxy,System.Linq.Expressions", @"ConditionalExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+ConstantExpressionProxy,System.Linq.Expressions", @"ConstantExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+DebugInfoExpressionProxy,System.Linq.Expressions", @"DebugInfoExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+DefaultExpressionProxy,System.Linq.Expressions", @"DefaultExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+GotoExpressionProxy,System.Linq.Expressions", @"GotoExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+IndexExpressionProxy,System.Linq.Expressions", @"IndexExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+InvocationExpressionProxy,System.Linq.Expressions", @"InvocationExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+LabelExpressionProxy,System.Linq.Expressions", @"LabelExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+LambdaExpressionProxy,System.Linq.Expressions", @"LambdaExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+ListInitExpressionProxy,System.Linq.Expressions", @"ListInitExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+LoopExpressionProxy,System.Linq.Expressions", @"LoopExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+MemberExpressionProxy,System.Linq.Expressions", @"MemberExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+MemberInitExpressionProxy,System.Linq.Expressions", @"MemberInitExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+MethodCallExpressionProxy,System.Linq.Expressions", @"MethodCallExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+NewArrayExpressionProxy,System.Linq.Expressions", @"NewArrayExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+NewExpressionProxy,System.Linq.Expressions", @"NewExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+ParameterExpressionProxy,System.Linq.Expressions", @"ParameterExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+RuntimeVariablesExpressionProxy,System.Linq.Expressions", @"RuntimeVariablesExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+SwitchCaseProxy,System.Linq.Expressions", @"SwitchCaseProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+SwitchExpressionProxy,System.Linq.Expressions", @"SwitchExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+TryExpressionProxy,System.Linq.Expressions", @"TryExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+TypeBinaryExpressionProxy,System.Linq.Expressions", @"TypeBinaryExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.Expression+UnaryExpressionProxy,System.Linq.Expressions", @"UnaryExpressionProxy");
            feature.AddKnownType(@"System.Linq.Expressions.BlockExpression,System.Linq.Expressions", @"BlockExpression");
            feature.AddKnownType(@"System.Linq.Expressions.Block2,System.Linq.Expressions", @"Block2");
            feature.AddKnownType(@"System.Linq.Expressions.Block3,System.Linq.Expressions", @"Block3");
            feature.AddKnownType(@"System.Linq.Expressions.Block4,System.Linq.Expressions", @"Block4");
            feature.AddKnownType(@"System.Linq.Expressions.Block5,System.Linq.Expressions", @"Block5");
            feature.AddKnownType(@"System.Linq.Expressions.BlockN,System.Linq.Expressions", @"BlockN");
            feature.AddKnownType(@"System.Linq.Expressions.ScopeExpression,System.Linq.Expressions", @"ScopeExpression");
            feature.AddKnownType(@"System.Linq.Expressions.Scope1,System.Linq.Expressions", @"Scope1");
            feature.AddKnownType(@"System.Linq.Expressions.ScopeN,System.Linq.Expressions", @"ScopeN");
            feature.AddKnownType(@"System.Linq.Expressions.ScopeWithType,System.Linq.Expressions", @"ScopeWithType");
            feature.AddKnownType(@"System.Linq.Expressions.BlockExpressionList,System.Linq.Expressions", @"BlockExpressionList");
            feature.AddKnownType(@"System.Linq.Expressions.CatchBlock,System.Linq.Expressions", @"CatchBlock");
            feature.AddKnownType(@"System.Linq.Expressions.ConditionalExpression,System.Linq.Expressions", @"ConditionalExpression");
            feature.AddKnownType(@"System.Linq.Expressions.FullConditionalExpression,System.Linq.Expressions", @"FullConditionalExpression");
            feature.AddKnownType(@"System.Linq.Expressions.FullConditionalExpressionWithType,System.Linq.Expressions", @"FullConditionalExpressionWithType");
            feature.AddKnownType(@"System.Linq.Expressions.ConstantExpression,System.Linq.Expressions", @"ConstantExpression");
            feature.AddKnownType(@"System.Linq.Expressions.TypedConstantExpression,System.Linq.Expressions", @"TypedConstantExpression");
            feature.AddKnownType(@"System.Linq.Expressions.DebugInfoExpression,System.Linq.Expressions", @"DebugInfoExpression");
            feature.AddKnownType(@"System.Linq.Expressions.SpanDebugInfoExpression,System.Linq.Expressions", @"SpanDebugInfoExpression");
            feature.AddKnownType(@"System.Linq.Expressions.ClearDebugInfoExpression,System.Linq.Expressions", @"ClearDebugInfoExpression");
            feature.AddKnownType(@"System.Linq.Expressions.DebugViewWriter,System.Linq.Expressions", @"DebugViewWriter");
            feature.AddKnownType(@"System.Linq.Expressions.DefaultExpression,System.Linq.Expressions", @"DefaultExpression");
            feature.AddKnownType(@"System.Linq.Expressions.ElementInit,System.Linq.Expressions", @"ElementInit");
            feature.AddKnownType(@"System.Linq.Expressions.IArgumentProvider,System.Linq.Expressions", @"IArgumentProvider");
            feature.AddKnownType(@"System.Linq.Expressions.Error,System.Linq.Expressions", @"Error");
            feature.AddKnownType(@"System.Linq.Expressions.ExpressionStringBuilder,System.Linq.Expressions", @"ExpressionStringBuilder");
            feature.AddKnownType(@"System.Linq.Expressions.ExpressionType,System.Linq.Expressions", @"ExpressionType");
            feature.AddKnownType(@"System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions", @"GotoExpressionKind");
            feature.AddKnownType(@"System.Linq.Expressions.GotoExpression,System.Linq.Expressions", @"GotoExpression");
            feature.AddKnownType(@"System.Linq.Expressions.IDynamicExpression,System.Linq.Expressions", @"IDynamicExpression");
            feature.AddKnownType(@"System.Linq.Expressions.IndexExpression,System.Linq.Expressions", @"IndexExpression");
            feature.AddKnownType(@"System.Linq.Expressions.InvocationExpression,System.Linq.Expressions", @"InvocationExpression");
            feature.AddKnownType(@"System.Linq.Expressions.InvocationExpressionN,System.Linq.Expressions", @"InvocationExpressionN");
            feature.AddKnownType(@"System.Linq.Expressions.InvocationExpression0,System.Linq.Expressions", @"InvocationExpression0");
            feature.AddKnownType(@"System.Linq.Expressions.InvocationExpression1,System.Linq.Expressions", @"InvocationExpression1");
            feature.AddKnownType(@"System.Linq.Expressions.InvocationExpression2,System.Linq.Expressions", @"InvocationExpression2");
            feature.AddKnownType(@"System.Linq.Expressions.InvocationExpression3,System.Linq.Expressions", @"InvocationExpression3");
            feature.AddKnownType(@"System.Linq.Expressions.InvocationExpression4,System.Linq.Expressions", @"InvocationExpression4");
            feature.AddKnownType(@"System.Linq.Expressions.InvocationExpression5,System.Linq.Expressions", @"InvocationExpression5");
            feature.AddKnownType(@"System.Linq.Expressions.IParameterProvider,System.Linq.Expressions", @"IParameterProvider");
            feature.AddKnownType(@"System.Linq.Expressions.LabelExpression,System.Linq.Expressions", @"LabelExpression");
            feature.AddKnownType(@"System.Linq.Expressions.LabelTarget,System.Linq.Expressions", @"LabelTarget");
            feature.AddKnownType(@"System.Linq.Expressions.LambdaExpression,System.Linq.Expressions", @"LambdaExpression");
            feature.AddKnownType(@"System.Linq.Expressions.Expression`1,System.Linq.Expressions", @"Expression`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.Expression0`1,System.Linq.Expressions", @"Expression0`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.Expression1`1,System.Linq.Expressions", @"Expression1`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.Expression2`1,System.Linq.Expressions", @"Expression2`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.Expression3`1,System.Linq.Expressions", @"Expression3`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.ExpressionN`1,System.Linq.Expressions", @"ExpressionN`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.FullExpression`1,System.Linq.Expressions", @"FullExpression`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.ListInitExpression,System.Linq.Expressions", @"ListInitExpression");
            feature.AddKnownType(@"System.Linq.Expressions.LoopExpression,System.Linq.Expressions", @"LoopExpression");
            feature.AddKnownType(@"System.Linq.Expressions.MemberAssignment,System.Linq.Expressions", @"MemberAssignment");
            feature.AddKnownType(@"System.Linq.Expressions.MemberBinding,System.Linq.Expressions", @"MemberBinding");
            feature.AddKnownType(@"System.Linq.Expressions.MemberBindingType,System.Linq.Expressions", @"MemberBindingType");
            feature.AddKnownType(@"System.Linq.Expressions.MemberExpression,System.Linq.Expressions", @"MemberExpression");
            feature.AddKnownType(@"System.Linq.Expressions.FieldExpression,System.Linq.Expressions", @"FieldExpression");
            feature.AddKnownType(@"System.Linq.Expressions.PropertyExpression,System.Linq.Expressions", @"PropertyExpression");
            feature.AddKnownType(@"System.Linq.Expressions.MemberInitExpression,System.Linq.Expressions", @"MemberInitExpression");
            feature.AddKnownType(@"System.Linq.Expressions.MemberListBinding,System.Linq.Expressions", @"MemberListBinding");
            feature.AddKnownType(@"System.Linq.Expressions.MemberMemberBinding,System.Linq.Expressions", @"MemberMemberBinding");
            feature.AddKnownType(@"System.Linq.Expressions.MethodCallExpression,System.Linq.Expressions", @"MethodCallExpression");
            feature.AddKnownType(@"System.Linq.Expressions.InstanceMethodCallExpression,System.Linq.Expressions", @"InstanceMethodCallExpression");
            feature.AddKnownType(@"System.Linq.Expressions.MethodCallExpressionN,System.Linq.Expressions", @"MethodCallExpressionN");
            feature.AddKnownType(@"System.Linq.Expressions.InstanceMethodCallExpressionN,System.Linq.Expressions", @"InstanceMethodCallExpressionN");
            feature.AddKnownType(@"System.Linq.Expressions.MethodCallExpression0,System.Linq.Expressions", @"MethodCallExpression0");
            feature.AddKnownType(@"System.Linq.Expressions.MethodCallExpression1,System.Linq.Expressions", @"MethodCallExpression1");
            feature.AddKnownType(@"System.Linq.Expressions.MethodCallExpression2,System.Linq.Expressions", @"MethodCallExpression2");
            feature.AddKnownType(@"System.Linq.Expressions.MethodCallExpression3,System.Linq.Expressions", @"MethodCallExpression3");
            feature.AddKnownType(@"System.Linq.Expressions.MethodCallExpression4,System.Linq.Expressions", @"MethodCallExpression4");
            feature.AddKnownType(@"System.Linq.Expressions.MethodCallExpression5,System.Linq.Expressions", @"MethodCallExpression5");
            feature.AddKnownType(@"System.Linq.Expressions.InstanceMethodCallExpression0,System.Linq.Expressions", @"InstanceMethodCallExpression0");
            feature.AddKnownType(@"System.Linq.Expressions.InstanceMethodCallExpression1,System.Linq.Expressions", @"InstanceMethodCallExpression1");
            feature.AddKnownType(@"System.Linq.Expressions.InstanceMethodCallExpression2,System.Linq.Expressions", @"InstanceMethodCallExpression2");
            feature.AddKnownType(@"System.Linq.Expressions.InstanceMethodCallExpression3,System.Linq.Expressions", @"InstanceMethodCallExpression3");
            feature.AddKnownType(@"System.Linq.Expressions.NewArrayExpression,System.Linq.Expressions", @"NewArrayExpression");
            feature.AddKnownType(@"System.Linq.Expressions.NewArrayInitExpression,System.Linq.Expressions", @"NewArrayInitExpression");
            feature.AddKnownType(@"System.Linq.Expressions.NewArrayBoundsExpression,System.Linq.Expressions", @"NewArrayBoundsExpression");
            feature.AddKnownType(@"System.Linq.Expressions.NewExpression,System.Linq.Expressions", @"NewExpression");
            feature.AddKnownType(@"System.Linq.Expressions.NewValueTypeExpression,System.Linq.Expressions", @"NewValueTypeExpression");
            feature.AddKnownType(@"System.Linq.Expressions.ParameterExpression,System.Linq.Expressions", @"ParameterExpression");
            feature.AddKnownType(@"System.Linq.Expressions.ByRefParameterExpression,System.Linq.Expressions", @"ByRefParameterExpression");
            feature.AddKnownType(@"System.Linq.Expressions.TypedParameterExpression,System.Linq.Expressions", @"TypedParameterExpression");
            feature.AddKnownType(@"System.Linq.Expressions.PrimitiveParameterExpression`1,System.Linq.Expressions", @"PrimitiveParameterExpression`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.RuntimeVariablesExpression,System.Linq.Expressions", @"RuntimeVariablesExpression");
            feature.AddKnownType(@"System.Linq.Expressions.Strings,System.Linq.Expressions", @"Strings");
            feature.AddKnownType(@"System.Linq.Expressions.SwitchCase,System.Linq.Expressions", @"SwitchCase");
            feature.AddKnownType(@"System.Linq.Expressions.SwitchExpression,System.Linq.Expressions", @"SwitchExpression");
            feature.AddKnownType(@"System.Linq.Expressions.SymbolDocumentInfo,System.Linq.Expressions", @"SymbolDocumentInfo");
            feature.AddKnownType(@"System.Linq.Expressions.SymbolDocumentWithGuids,System.Linq.Expressions", @"SymbolDocumentWithGuids");
            feature.AddKnownType(@"System.Linq.Expressions.TryExpression,System.Linq.Expressions", @"TryExpression");
            feature.AddKnownType(@"System.Linq.Expressions.TypeBinaryExpression,System.Linq.Expressions", @"TypeBinaryExpression");
            feature.AddKnownType(@"System.Linq.Expressions.UnaryExpression,System.Linq.Expressions", @"UnaryExpression");
            feature.AddKnownType(@"System.Linq.Expressions.Utils,System.Linq.Expressions", @"Utils");
            feature.AddKnownType(@"System.Linq.Expressions.StackGuard,System.Linq.Expressions", @"StackGuard");
            feature.AddKnownType(@"System.Linq.Expressions.DynamicExpressionVisitor,System.Linq.Expressions", @"DynamicExpressionVisitor");
            feature.AddKnownType(@"System.Linq.Expressions.DynamicExpression,System.Linq.Expressions", @"DynamicExpression");
            feature.AddKnownType(@"System.Linq.Expressions.DynamicExpressionN,System.Linq.Expressions", @"DynamicExpressionN");
            feature.AddKnownType(@"System.Linq.Expressions.TypedDynamicExpressionN,System.Linq.Expressions", @"TypedDynamicExpressionN");
            feature.AddKnownType(@"System.Linq.Expressions.DynamicExpression1,System.Linq.Expressions", @"DynamicExpression1");
            feature.AddKnownType(@"System.Linq.Expressions.TypedDynamicExpression1,System.Linq.Expressions", @"TypedDynamicExpression1");
            feature.AddKnownType(@"System.Linq.Expressions.DynamicExpression2,System.Linq.Expressions", @"DynamicExpression2");
            feature.AddKnownType(@"System.Linq.Expressions.TypedDynamicExpression2,System.Linq.Expressions", @"TypedDynamicExpression2");
            feature.AddKnownType(@"System.Linq.Expressions.DynamicExpression3,System.Linq.Expressions", @"DynamicExpression3");
            feature.AddKnownType(@"System.Linq.Expressions.TypedDynamicExpression3,System.Linq.Expressions", @"TypedDynamicExpression3");
            feature.AddKnownType(@"System.Linq.Expressions.DynamicExpression4,System.Linq.Expressions", @"DynamicExpression4");
            feature.AddKnownType(@"System.Linq.Expressions.TypedDynamicExpression4,System.Linq.Expressions", @"TypedDynamicExpression4");
            feature.AddKnownType(@"System.Linq.Expressions.ExpressionExtension,System.Linq.Expressions", @"ExpressionExtension");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.AddInstruction,System.Linq.Expressions", @"AddInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.Instruction,System.Linq.Expressions", @"Instruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.AddOvfInstruction,System.Linq.Expressions", @"AddOvfInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.AndInstruction,System.Linq.Expressions", @"AndInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NewArrayInitInstruction,System.Linq.Expressions", @"NewArrayInitInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NewArrayInstruction,System.Linq.Expressions", @"NewArrayInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NewArrayBoundsInstruction,System.Linq.Expressions", @"NewArrayBoundsInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.GetArrayItemInstruction,System.Linq.Expressions", @"GetArrayItemInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.SetArrayItemInstruction,System.Linq.Expressions", @"SetArrayItemInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ArrayLengthInstruction,System.Linq.Expressions", @"ArrayLengthInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ConvertHelper,System.Linq.Expressions", @"ConvertHelper");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.RuntimeLabel,System.Linq.Expressions", @"RuntimeLabel");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.BranchLabel,System.Linq.Expressions", @"BranchLabel");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.CallInstruction,System.Linq.Expressions", @"CallInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.MethodInfoCallInstruction,System.Linq.Expressions", @"MethodInfoCallInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ByRefMethodInfoCallInstruction,System.Linq.Expressions", @"ByRefMethodInfoCallInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ActionCallInstruction,System.Linq.Expressions", @"ActionCallInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ActionCallInstruction`1,System.Linq.Expressions", @"ActionCallInstruction`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ActionCallInstruction`2,System.Linq.Expressions", @"ActionCallInstruction`2'2");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ActionCallInstruction`3,System.Linq.Expressions", @"ActionCallInstruction`3'3");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ActionCallInstruction`4,System.Linq.Expressions", @"ActionCallInstruction`4'4");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.FuncCallInstruction`1,System.Linq.Expressions", @"FuncCallInstruction`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.FuncCallInstruction`2,System.Linq.Expressions", @"FuncCallInstruction`2'2");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.FuncCallInstruction`3,System.Linq.Expressions", @"FuncCallInstruction`3'3");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.FuncCallInstruction`4,System.Linq.Expressions", @"FuncCallInstruction`4'4");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.FuncCallInstruction`5,System.Linq.Expressions", @"FuncCallInstruction`5'5");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.OffsetInstruction,System.Linq.Expressions", @"OffsetInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.BranchFalseInstruction,System.Linq.Expressions", @"BranchFalseInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.BranchTrueInstruction,System.Linq.Expressions", @"BranchTrueInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.CoalescingBranchInstruction,System.Linq.Expressions", @"CoalescingBranchInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.BranchInstruction,System.Linq.Expressions", @"BranchInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.IndexedBranchInstruction,System.Linq.Expressions", @"IndexedBranchInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.GotoInstruction,System.Linq.Expressions", @"GotoInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.EnterTryCatchFinallyInstruction,System.Linq.Expressions", @"EnterTryCatchFinallyInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.EnterTryFaultInstruction,System.Linq.Expressions", @"EnterTryFaultInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.EnterFinallyInstruction,System.Linq.Expressions", @"EnterFinallyInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LeaveFinallyInstruction,System.Linq.Expressions", @"LeaveFinallyInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.EnterFaultInstruction,System.Linq.Expressions", @"EnterFaultInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LeaveFaultInstruction,System.Linq.Expressions", @"LeaveFaultInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.EnterExceptionFilterInstruction,System.Linq.Expressions", @"EnterExceptionFilterInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LeaveExceptionFilterInstruction,System.Linq.Expressions", @"LeaveExceptionFilterInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.EnterExceptionHandlerInstruction,System.Linq.Expressions", @"EnterExceptionHandlerInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LeaveExceptionHandlerInstruction,System.Linq.Expressions", @"LeaveExceptionHandlerInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ThrowInstruction,System.Linq.Expressions", @"ThrowInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.IntSwitchInstruction`1,System.Linq.Expressions", @"IntSwitchInstruction`1'1");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.StringSwitchInstruction,System.Linq.Expressions", @"StringSwitchInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.DecrementInstruction,System.Linq.Expressions", @"DecrementInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.DefaultValueInstruction,System.Linq.Expressions", @"DefaultValueInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.DivInstruction,System.Linq.Expressions", @"DivInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.EqualInstruction,System.Linq.Expressions", @"EqualInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ExclusiveOrInstruction,System.Linq.Expressions", @"ExclusiveOrInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.FieldInstruction,System.Linq.Expressions", @"FieldInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LoadStaticFieldInstruction,System.Linq.Expressions", @"LoadStaticFieldInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LoadFieldInstruction,System.Linq.Expressions", @"LoadFieldInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.StoreFieldInstruction,System.Linq.Expressions", @"StoreFieldInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.StoreStaticFieldInstruction,System.Linq.Expressions", @"StoreStaticFieldInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.GreaterThanInstruction,System.Linq.Expressions", @"GreaterThanInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.GreaterThanOrEqualInstruction,System.Linq.Expressions", @"GreaterThanOrEqualInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.IncrementInstruction,System.Linq.Expressions", @"IncrementInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InstructionArray,System.Linq.Expressions", @"InstructionArray");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InstructionArray+DebugView,System.Linq.Expressions", @"DebugView");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InstructionList,System.Linq.Expressions", @"InstructionList");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InstructionList+DebugView,System.Linq.Expressions", @"DebugView");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InstructionList+DebugView+InstructionView,System.Linq.Expressions", @"InstructionView");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InterpretedFrame,System.Linq.Expressions", @"InterpretedFrame");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InterpretedFrameInfo,System.Linq.Expressions", @"InterpretedFrameInfo");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.Interpreter,System.Linq.Expressions", @"Interpreter");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LabelInfo,System.Linq.Expressions", @"LabelInfo");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LabelScopeKind,System.Linq.Expressions", @"LabelScopeKind");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LabelScopeInfo,System.Linq.Expressions", @"LabelScopeInfo");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LeftShiftInstruction,System.Linq.Expressions", @"LeftShiftInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LessThanInstruction,System.Linq.Expressions", @"LessThanInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LessThanOrEqualInstruction,System.Linq.Expressions", @"LessThanOrEqualInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ExceptionFilter,System.Linq.Expressions", @"ExceptionFilter");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ExceptionHandler,System.Linq.Expressions", @"ExceptionHandler");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.TryCatchFinallyHandler,System.Linq.Expressions", @"TryCatchFinallyHandler");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.TryFaultHandler,System.Linq.Expressions", @"TryFaultHandler");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.RethrowException,System.Linq.Expressions", @"RethrowException");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.DebugInfo,System.Linq.Expressions", @"DebugInfo");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LightCompiler,System.Linq.Expressions", @"LightCompiler");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ByRefUpdater,System.Linq.Expressions", @"ByRefUpdater");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ParameterByRefUpdater,System.Linq.Expressions", @"ParameterByRefUpdater");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ArrayByRefUpdater,System.Linq.Expressions", @"ArrayByRefUpdater");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.FieldByRefUpdater,System.Linq.Expressions", @"FieldByRefUpdater");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.PropertyByRefUpdater,System.Linq.Expressions", @"PropertyByRefUpdater");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.IndexMethodByRefUpdater,System.Linq.Expressions", @"IndexMethodByRefUpdater");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LightDelegateCreator,System.Linq.Expressions", @"LightDelegateCreator");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LightLambda,System.Linq.Expressions", @"LightLambda");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.IBoxableInstruction,System.Linq.Expressions", @"IBoxableInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LocalAccessInstruction,System.Linq.Expressions", @"LocalAccessInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LoadLocalInstruction,System.Linq.Expressions", @"LoadLocalInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LoadLocalBoxedInstruction,System.Linq.Expressions", @"LoadLocalBoxedInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LoadLocalFromClosureInstruction,System.Linq.Expressions", @"LoadLocalFromClosureInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LoadLocalFromClosureBoxedInstruction,System.Linq.Expressions", @"LoadLocalFromClosureBoxedInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.AssignLocalInstruction,System.Linq.Expressions", @"AssignLocalInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.StoreLocalInstruction,System.Linq.Expressions", @"StoreLocalInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.AssignLocalBoxedInstruction,System.Linq.Expressions", @"AssignLocalBoxedInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.StoreLocalBoxedInstruction,System.Linq.Expressions", @"StoreLocalBoxedInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.AssignLocalToClosureInstruction,System.Linq.Expressions", @"AssignLocalToClosureInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ValueTypeCopyInstruction,System.Linq.Expressions", @"ValueTypeCopyInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InitializeLocalInstruction,System.Linq.Expressions", @"InitializeLocalInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InitializeLocalInstruction+Reference,System.Linq.Expressions", @"Reference");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InitializeLocalInstruction+ImmutableValue,System.Linq.Expressions", @"ImmutableValue");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InitializeLocalInstruction+ImmutableBox,System.Linq.Expressions", @"ImmutableBox");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InitializeLocalInstruction+ImmutableRefBox,System.Linq.Expressions", @"ImmutableRefBox");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InitializeLocalInstruction+ParameterBox,System.Linq.Expressions", @"ParameterBox");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InitializeLocalInstruction+Parameter,System.Linq.Expressions", @"Parameter");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InitializeLocalInstruction+MutableValue,System.Linq.Expressions", @"MutableValue");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.InitializeLocalInstruction+MutableBox,System.Linq.Expressions", @"MutableBox");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.RuntimeVariablesInstruction,System.Linq.Expressions", @"RuntimeVariablesInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LocalVariable,System.Linq.Expressions", @"LocalVariable");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LocalDefinition,System.Linq.Expressions", @"LocalDefinition");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LocalVariables,System.Linq.Expressions", @"LocalVariables");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ModuloInstruction,System.Linq.Expressions", @"ModuloInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.MulInstruction,System.Linq.Expressions", @"MulInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.MulOvfInstruction,System.Linq.Expressions", @"MulOvfInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NegateInstruction,System.Linq.Expressions", @"NegateInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NegateCheckedInstruction,System.Linq.Expressions", @"NegateCheckedInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NewInstruction,System.Linq.Expressions", @"NewInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ByRefNewInstruction,System.Linq.Expressions", @"ByRefNewInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NotEqualInstruction,System.Linq.Expressions", @"NotEqualInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NotInstruction,System.Linq.Expressions", @"NotInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NumericConvertInstruction,System.Linq.Expressions", @"NumericConvertInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NumericConvertInstruction+Unchecked,System.Linq.Expressions", @"Unchecked");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NumericConvertInstruction+Checked,System.Linq.Expressions", @"Checked");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NumericConvertInstruction+ToUnderlying,System.Linq.Expressions", @"ToUnderlying");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NullCheckInstruction,System.Linq.Expressions", @"NullCheckInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.OrInstruction,System.Linq.Expressions", @"OrInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.RightShiftInstruction,System.Linq.Expressions", @"RightShiftInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.RuntimeVariables,System.Linq.Expressions", @"RuntimeVariables");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LoadObjectInstruction,System.Linq.Expressions", @"LoadObjectInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.LoadCachedObjectInstruction,System.Linq.Expressions", @"LoadCachedObjectInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.PopInstruction,System.Linq.Expressions", @"PopInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.DupInstruction,System.Linq.Expressions", @"DupInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.SubInstruction,System.Linq.Expressions", @"SubInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.SubOvfInstruction,System.Linq.Expressions", @"SubOvfInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.CreateDelegateInstruction,System.Linq.Expressions", @"CreateDelegateInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.TypeIsInstruction,System.Linq.Expressions", @"TypeIsInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.TypeAsInstruction,System.Linq.Expressions", @"TypeAsInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.TypeEqualsInstruction,System.Linq.Expressions", @"TypeEqualsInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.NullableMethodCallInstruction,System.Linq.Expressions", @"NullableMethodCallInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.CastInstruction,System.Linq.Expressions", @"CastInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.CastToEnumInstruction,System.Linq.Expressions", @"CastToEnumInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.CastReferenceToEnumInstruction,System.Linq.Expressions", @"CastReferenceToEnumInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.QuoteInstruction,System.Linq.Expressions", @"QuoteInstruction");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ScriptingRuntimeHelpers,System.Linq.Expressions", @"ScriptingRuntimeHelpers");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.ExceptionHelpers,System.Linq.Expressions", @"ExceptionHelpers");
            feature.AddKnownType(@"System.Linq.Expressions.Interpreter.HybridReferenceDictionary`2,System.Linq.Expressions", @"HybridReferenceDictionary`2'2");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.TypeInfoExtensions,System.Linq.Expressions", @"TypeInfoExtensions");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.DelegateHelpers,System.Linq.Expressions", @"DelegateHelpers");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.DelegateHelpers+TypeInfo,System.Linq.Expressions", @"TypeInfo");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.AssemblyGen,System.Linq.Expressions", @"AssemblyGen");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.AnalyzedTree,System.Linq.Expressions", @"AnalyzedTree");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.BoundConstants,System.Linq.Expressions", @"BoundConstants");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.VariableStorageKind,System.Linq.Expressions", @"VariableStorageKind");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.CompilerScope,System.Linq.Expressions", @"CompilerScope");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.ParameterProviderExtensions,System.Linq.Expressions", @"ParameterProviderExtensions");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.ParameterList,System.Linq.Expressions", @"ParameterList");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.HoistedLocals,System.Linq.Expressions", @"HoistedLocals");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.ILGen,System.Linq.Expressions", @"ILGen");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.KeyedStack`2,System.Linq.Expressions", @"KeyedStack`2'2");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.LabelInfo,System.Linq.Expressions", @"LabelInfo");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.LabelScopeKind,System.Linq.Expressions", @"LabelScopeKind");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.LabelScopeInfo,System.Linq.Expressions", @"LabelScopeInfo");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.LambdaCompiler,System.Linq.Expressions", @"LambdaCompiler");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.ILocalCache,System.Linq.Expressions", @"ILocalCache");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.LambdaCompiler+CompilationFlags,System.Linq.Expressions", @"CompilationFlags");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.StackSpiller,System.Linq.Expressions", @"StackSpiller");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.SpilledExpressionBlock,System.Linq.Expressions", @"SpilledExpressionBlock");
            feature.AddKnownType(@"System.Linq.Expressions.Compiler.VariableBinder,System.Linq.Expressions", @"VariableBinder");
            feature.AddKnownType(@"System.Dynamic.UpdateDelegates,System.Linq.Expressions", @"UpdateDelegates");
            feature.AddKnownType(@"System.Dynamic.DynamicMetaObjectBinder,System.Linq.Expressions", @"DynamicMetaObjectBinder");
            feature.AddKnownType(@"System.Dynamic.DynamicMetaObject,System.Linq.Expressions", @"DynamicMetaObject");
            feature.AddKnownType(@"System.Dynamic.IDynamicMetaObjectProvider,System.Linq.Expressions", @"IDynamicMetaObjectProvider");
            feature.AddKnownType(@"System.Dynamic.BindingRestrictions,System.Linq.Expressions", @"BindingRestrictions");
            feature.AddKnownType(@"System.Dynamic.BinaryOperationBinder,System.Linq.Expressions", @"BinaryOperationBinder");
            feature.AddKnownType(@"System.Dynamic.CallInfo,System.Linq.Expressions", @"CallInfo");
            feature.AddKnownType(@"System.Dynamic.ExpandoObject,System.Linq.Expressions", @"ExpandoObject");
            feature.AddKnownType(@"System.Dynamic.ExpandoClass,System.Linq.Expressions", @"ExpandoClass");
            feature.AddKnownType(@"System.Dynamic.ConvertBinder,System.Linq.Expressions", @"ConvertBinder");
            feature.AddKnownType(@"System.Dynamic.CreateInstanceBinder,System.Linq.Expressions", @"CreateInstanceBinder");
            feature.AddKnownType(@"System.Dynamic.DeleteIndexBinder,System.Linq.Expressions", @"DeleteIndexBinder");
            feature.AddKnownType(@"System.Dynamic.DeleteMemberBinder,System.Linq.Expressions", @"DeleteMemberBinder");
            feature.AddKnownType(@"System.Dynamic.DynamicObject,System.Linq.Expressions", @"DynamicObject");
            feature.AddKnownType(@"System.Dynamic.GetMemberBinder,System.Linq.Expressions", @"GetMemberBinder");
            feature.AddKnownType(@"System.Dynamic.GetIndexBinder,System.Linq.Expressions", @"GetIndexBinder");
            feature.AddKnownType(@"System.Dynamic.InvokeBinder,System.Linq.Expressions", @"InvokeBinder");
            feature.AddKnownType(@"System.Dynamic.InvokeMemberBinder,System.Linq.Expressions", @"InvokeMemberBinder");
            feature.AddKnownType(@"System.Dynamic.SetIndexBinder,System.Linq.Expressions", @"SetIndexBinder");
            feature.AddKnownType(@"System.Dynamic.SetMemberBinder,System.Linq.Expressions", @"SetMemberBinder");
            feature.AddKnownType(@"System.Dynamic.UnaryOperationBinder,System.Linq.Expressions", @"UnaryOperationBinder");
            feature.AddKnownType(@"System.Dynamic.IInvokeOnGetBinder,System.Linq.Expressions", @"IInvokeOnGetBinder");
            feature.AddKnownType(@"System.Dynamic.Utils.CacheDict`2,System.Linq.Expressions", @"CacheDict`2'2");
            feature.AddKnownType(@"System.Dynamic.Utils.ContractUtils,System.Linq.Expressions", @"ContractUtils");
            feature.AddKnownType(@"System.Dynamic.Utils.ExpressionUtils,System.Linq.Expressions", @"ExpressionUtils");
            feature.AddKnownType(@"System.Dynamic.Utils.ExpressionVisitorUtils,System.Linq.Expressions", @"ExpressionVisitorUtils");
            feature.AddKnownType(@"System.Dynamic.Utils.ListProvider`1,System.Linq.Expressions", @"ListProvider`1'1");
            feature.AddKnownType(@"System.Dynamic.Utils.ListArgumentProvider,System.Linq.Expressions", @"ListArgumentProvider");
            feature.AddKnownType(@"System.Dynamic.Utils.ListParameterProvider,System.Linq.Expressions", @"ListParameterProvider");
            feature.AddKnownType(@"System.Dynamic.Utils.TypeExtensions,System.Linq.Expressions", @"TypeExtensions");
            feature.AddKnownType(@"System.Dynamic.Utils.TypeUtils,System.Linq.Expressions", @"TypeUtils");
            feature.AddKnownType(@"System.Dynamic.Utils.CollectionExtensions,System.Linq.Expressions", @"CollectionExtensions");
            feature.AddKnownType(@"System.Dynamic.Utils.EmptyReadOnlyCollection`1,System.Linq.Expressions", @"EmptyReadOnlyCollection`1'1");
            feature.AddKnownType(@"System.Dynamic.Utils.Helpers,System.Linq.Expressions", @"Helpers");
            feature.AddKnownType(@"System.Dynamic.Utils.DelegateHelpers,System.Linq.Expressions", @"DelegateHelpers");
            feature.AddKnownType(@"System.Collections.Generic.ArrayBuilder`1,System.Linq.Expressions", @"ArrayBuilder`1'1");
            feature.AddKnownType(@"System.Collections.Generic.ReferenceEqualityComparer`1,System.Linq.Expressions", @"ReferenceEqualityComparer`1'1");
            feature.AddKnownType(@"Microsoft.Extensions.DependencyInjection.ServiceCollectionHostedServiceExtensions,Microsoft.Extensions.Hosting.Abstractions", @"Microsoft.Extensions.DependencyInjection.ServiceCollectionHostedServiceExtensions");
            feature.AddKnownType(@"Microsoft.Extensions.Hosting.EnvironmentName,Microsoft.Extensions.Hosting.Abstractions", @"Microsoft.Extensions.Hosting.EnvironmentName");
            feature.AddKnownType(@"Microsoft.Extensions.Hosting.Environments,Microsoft.Extensions.Hosting.Abstractions", @"Microsoft.Extensions.Hosting.Environments");
            feature.AddKnownType(@"Microsoft.Extensions.Hosting.HostDefaults,Microsoft.Extensions.Hosting.Abstractions", @"Microsoft.Extensions.Hosting.HostDefaults");
            feature.AddKnownType(@"Microsoft.Extensions.Hosting.HostEnvironmentEnvExtensions,Microsoft.Extensions.Hosting.Abstractions", @"Microsoft.Extensions.Hosting.HostEnvironmentEnvExtensions");
            feature.AddKnownType(@"Microsoft.Extensions.Hosting.HostingAbstractionsHostBuilderExtensions,Microsoft.Extensions.Hosting.Abstractions", @"Microsoft.Extensions.Hosting.HostingAbstractionsHostBuilderExtensions");
            feature.AddKnownType(@"Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions,Microsoft.Extensions.Hosting.Abstractions", @"Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions");
            feature.AddKnownType(@"Microsoft.Extensions.Hosting.HostingEnvironmentExtensions,Microsoft.Extensions.Hosting.Abstractions", @"Microsoft.Extensions.Hosting.HostingEnvironmentExtensions");
            feature.AddKnownType(@"Metaflow.MutationRequest,Metaflow.Core", @"Metaflow.MutationRequest");
            feature.AddKnownType(@"Metaflow.Updated`1,Metaflow.Core", @"Metaflow.Updated`1'1");
            feature.AddKnownType(@"Metaflow.Deleted`1,Metaflow.Core", @"Metaflow.Deleted`1'1");
            feature.AddKnownType(@"Metaflow.Replaced`1,Metaflow.Core", @"Metaflow.Replaced`1'1");
            feature.AddKnownType(@"Metaflow.Created`1,Metaflow.Core", @"Metaflow.Created`1'1");
            feature.AddKnownType(@"Metaflow.Rejected`1,Metaflow.Core", @"Metaflow.Rejected`1'1");
            feature.AddKnownType(@"Metaflow.Failed`1,Metaflow.Core", @"Metaflow.Failed`1'1");
            feature.AddKnownType(@"Metaflow.Received`1,Metaflow.Core", @"Metaflow.Received`1'1");
            feature.AddKnownType(@"Metaflow.InvalidStateChange,Metaflow.Core", @"Metaflow.InvalidStateChange");
            feature.AddKnownType(@"Metaflow.RestfulAttribute,Metaflow.Core", @"Metaflow.RestfulAttribute");
            feature.AddKnownType(@"Metaflow.Result`1,Metaflow.Core", @"Metaflow.Result`1'1");
            feature.AddKnownType(@"Metaflow.StateChange,Metaflow.Core", @"Metaflow.StateChange");
            feature.AddKnownType(@"Orleans.Hosting.CustomStorageSiloBuilderExtensions,Orleans.EventSourcing", @"Orleans.Hosting.CustomStorageSiloBuilderExtensions");
            feature.AddKnownType(@"Orleans.Hosting.LogStorageSiloBuilderExtensions,Orleans.EventSourcing", @"Orleans.Hosting.LogStorageSiloBuilderExtensions");
            feature.AddKnownType(@"Orleans.Hosting.StateStorageSiloBuilderExtensions,Orleans.EventSourcing", @"Orleans.Hosting.StateStorageSiloBuilderExtensions");
            feature.AddKnownType(@"Orleans.Configuration.CustomStorageLogConsistencyOptions,Orleans.EventSourcing", @"Orleans.Configuration.CustomStorageLogConsistencyOptions");
            feature.AddKnownType(@"Orleans.EventSourcing.StateStorage.DefaultAdaptorFactory,Orleans.EventSourcing", @"Orleans.EventSourcing.StateStorage.DefaultAdaptorFactory");
            feature.AddKnownType(@"Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag`1,Orleans.EventSourcing", @"Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag`1'1");
            feature.AddKnownType(@"Orleans.EventSourcing.StateStorage.GrainStateWithMetaData`1,Orleans.EventSourcing", @"Orleans.EventSourcing.StateStorage.GrainStateWithMetaData`1'1");
            feature.AddKnownType(@"Orleans.EventSourcing.StateStorage.LogConsistencyProvider,Orleans.EventSourcing", @"Orleans.EventSourcing.StateStorage.LogConsistencyProvider");
            feature.AddKnownType(@"Orleans.EventSourcing.StateStorage.LogViewAdaptor`2,Orleans.EventSourcing", @"Orleans.EventSourcing.StateStorage.LogViewAdaptor`2'2");
            feature.AddKnownType(@"Orleans.EventSourcing.Common.PrimaryBasedLogViewAdaptor`3,Orleans.EventSourcing", @"Orleans.EventSourcing.Common.PrimaryBasedLogViewAdaptor`3'3");
            feature.AddKnownType(@"Orleans.EventSourcing.Common.SubmissionEntry`1,Orleans.EventSourcing", @"Orleans.EventSourcing.Common.SubmissionEntry`1'1");
            feature.AddKnownType(@"Orleans.EventSourcing.LogStorage.DefaultAdaptorFactory,Orleans.EventSourcing", @"Orleans.EventSourcing.LogStorage.DefaultAdaptorFactory");
            feature.AddKnownType(@"Orleans.EventSourcing.LogStorage.LogConsistencyProvider,Orleans.EventSourcing", @"Orleans.EventSourcing.LogStorage.LogConsistencyProvider");
            feature.AddKnownType(@"Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag`1,Orleans.EventSourcing", @"Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag`1'1");
            feature.AddKnownType(@"Orleans.EventSourcing.LogStorage.LogStateWithMetaData`1,Orleans.EventSourcing", @"Orleans.EventSourcing.LogStorage.LogStateWithMetaData`1'1");
            feature.AddKnownType(@"Orleans.EventSourcing.LogStorage.LogViewAdaptor`2,Orleans.EventSourcing", @"Orleans.EventSourcing.LogStorage.LogViewAdaptor`2'2");
            feature.AddKnownType(@"Orleans.EventSourcing.CustomStorage.ICustomStorageInterface`2,Orleans.EventSourcing", @"Orleans.EventSourcing.CustomStorage.ICustomStorageInterface`2'2");
            feature.AddKnownType(@"Orleans.EventSourcing.CustomStorage.LogConsistencyProvider,Orleans.EventSourcing", @"Orleans.EventSourcing.CustomStorage.LogConsistencyProvider");
            feature.AddKnownType(@"Orleans.EventSourcing.CustomStorage.LogConsistencyProviderFactory,Orleans.EventSourcing", @"Orleans.EventSourcing.CustomStorage.LogConsistencyProviderFactory");
            feature.AddKnownType(@"Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2,Orleans.EventSourcing", @"Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2'2");
            feature.AddKnownType(@"Orleans.EventSourcing.Common.NotificationFailed,Orleans.EventSourcing", @"Orleans.EventSourcing.Common.NotificationFailed");
            feature.AddKnownType(@"Orleans.EventSourcing.Common.PrimaryOperationFailed,Orleans.EventSourcing", @"Orleans.EventSourcing.Common.PrimaryOperationFailed");
            feature.AddKnownType(@"Orleans.EventSourcing.Common.INotificationMessage,Orleans.EventSourcing", @"Orleans.EventSourcing.Common.INotificationMessage");
            feature.AddKnownType(@"Orleans.EventSourcing.Common.VersionNotificationMessage,Orleans.EventSourcing", @"Orleans.EventSourcing.Common.VersionNotificationMessage");
            feature.AddKnownType(@"Orleans.EventSourcing.Common.BatchedNotificationMessage,Orleans.EventSourcing", @"Orleans.EventSourcing.Common.BatchedNotificationMessage");
            feature.AddKnownType(@"Orleans.EventSourcing.Common.RecordedConnectionIssue,Orleans.EventSourcing", @"Orleans.EventSourcing.Common.RecordedConnectionIssue");
            feature.AddKnownType(@"Orleans.EventSourcing.Common.StringEncodedWriteVector,Orleans.EventSourcing", @"Orleans.EventSourcing.Common.StringEncodedWriteVector");
            feature.AddKnownType(@"Orleans.EventSourcing.StateStorage.LogViewAdaptor`2+UpdateStateStorageFailed,Orleans.EventSourcing", @"Orleans.EventSourcing.StateStorage.Orleans.EventSourcing.StateStorage.LogViewAdaptor`2'2.UpdateStateStorageFailed'2");
            feature.AddKnownType(@"Orleans.EventSourcing.StateStorage.LogViewAdaptor`2+ReadFromStateStorageFailed,Orleans.EventSourcing", @"Orleans.EventSourcing.StateStorage.Orleans.EventSourcing.StateStorage.LogViewAdaptor`2'2.ReadFromStateStorageFailed'2");
            feature.AddKnownType(@"Orleans.EventSourcing.StateStorage.LogViewAdaptor`2+UpdateNotificationMessage,Orleans.EventSourcing", @"Orleans.EventSourcing.StateStorage.UpdateNotificationMessage'2");
            feature.AddKnownType(@"Orleans.EventSourcing.LogStorage.LogViewAdaptor`2+UpdateLogStorageFailed,Orleans.EventSourcing", @"Orleans.EventSourcing.LogStorage.Orleans.EventSourcing.LogStorage.LogViewAdaptor`2'2.UpdateLogStorageFailed'2");
            feature.AddKnownType(@"Orleans.EventSourcing.LogStorage.LogViewAdaptor`2+ReadFromLogStorageFailed,Orleans.EventSourcing", @"Orleans.EventSourcing.LogStorage.Orleans.EventSourcing.LogStorage.LogViewAdaptor`2'2.ReadFromLogStorageFailed'2");
            feature.AddKnownType(@"Orleans.EventSourcing.LogStorage.LogViewAdaptor`2+UpdateNotificationMessage,Orleans.EventSourcing", @"Orleans.EventSourcing.LogStorage.UpdateNotificationMessage'2");
            feature.AddKnownType(@"Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2+UpdatePrimaryFailed,Orleans.EventSourcing", @"Orleans.EventSourcing.CustomStorage.Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2'2.UpdatePrimaryFailed'2");
            feature.AddKnownType(@"Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2+ReadFromPrimaryFailed,Orleans.EventSourcing", @"Orleans.EventSourcing.CustomStorage.Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2'2.ReadFromPrimaryFailed'2");
            feature.AddKnownType(@"Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2+UpdateNotificationMessage,Orleans.EventSourcing", @"Orleans.EventSourcing.CustomStorage.UpdateNotificationMessage'2");
            feature.AddKnownType(@"OrleansGeneratedCode.OrleansCodeGene7c82e4b00FeaturePopulator,Orleans.Runtime.Abstractions", @"OrleansGeneratedCode.OrleansCodeGene7c82e4b00FeaturePopulator");
            feature.AddKnownType(@"Orleans.Hosting.SiloHostBuilderExtensions,Orleans.Runtime.Abstractions", @"Orleans.Hosting.SiloHostBuilderExtensions");
            feature.AddKnownType(@"Orleans.Hosting.HostingGrainExtensions,Orleans.Runtime.Abstractions", @"Orleans.Hosting.HostingGrainExtensions");
            feature.AddKnownType(@"Orleans.Hosting.SiloBuilderExtensions,Orleans.Runtime.Abstractions", @"Orleans.Hosting.SiloBuilderExtensions");
            feature.AddKnownType(@"Orleans.Hosting.SiloBuilderStartupExtensions,Orleans.Runtime.Abstractions", @"Orleans.Hosting.SiloBuilderStartupExtensions");
            feature.AddKnownType(@"Orleans.Hosting.StreamHostingExtensions,Orleans.Runtime.Abstractions", @"Orleans.Hosting.StreamHostingExtensions");
            feature.AddKnownType(@"Orleans.Hosting.SiloPersistentStreamConfiguratorExtensions,Orleans.Runtime.Abstractions", @"Orleans.Hosting.SiloPersistentStreamConfiguratorExtensions");
            feature.AddKnownType(@"OrleansGeneratedCode.OrleansCodeGen8d3b938dbcFeaturePopulator,Orleans.Persistence.AzureStorage", @"OrleansGeneratedCode.OrleansCodeGen8d3b938dbcFeaturePopulator");
            feature.AddKnownType(@"Orleans.Persistence.AzureStorage.AzureBlobUtils,Orleans.Persistence.AzureStorage", @"Orleans.Persistence.AzureStorage.AzureBlobUtils");
            feature.AddKnownType(@"Orleans.Persistence.AzureStorage.TableDataManagerInternalExtensions,Orleans.Persistence.AzureStorage", @"Orleans.Persistence.AzureStorage.TableDataManagerInternalExtensions");
            feature.AddKnownType(@"Orleans.Persistence.AzureStorage.AzureTableConstants,Orleans.Persistence.AzureStorage", @"Orleans.Persistence.AzureStorage.AzureTableConstants");
            feature.AddKnownType(@"Orleans.Persistence.AzureStorage.AzureTableUtils,Orleans.Persistence.AzureStorage", @"Orleans.Persistence.AzureStorage.AzureTableUtils");
            feature.AddKnownType(@"Orleans.Storage.AzureBlobGrainStorageFactory,Orleans.Persistence.AzureStorage", @"Orleans.Storage.AzureBlobGrainStorageFactory");
            feature.AddKnownType(@"Orleans.Storage.AzureTableGrainStorageFactory,Orleans.Persistence.AzureStorage", @"Orleans.Storage.AzureTableGrainStorageFactory");
            feature.AddKnownType(@"Orleans.Storage.StorageExceptionExtensions,Orleans.Persistence.AzureStorage", @"Orleans.Storage.StorageExceptionExtensions");
            feature.AddKnownType(@"Orleans.Hosting.AzureBlobSiloBuilderExtensions,Orleans.Persistence.AzureStorage", @"Orleans.Hosting.AzureBlobSiloBuilderExtensions");
            feature.AddKnownType(@"Orleans.Hosting.AzureTableSiloBuilderExtensions,Orleans.Persistence.AzureStorage", @"Orleans.Hosting.AzureTableSiloBuilderExtensions");
            feature.AddKnownType(@"OrleansGeneratedCode.OrleansCodeGen5f7569b5f8FeaturePopulator,Orleans.Runtime", @"OrleansGeneratedCode.OrleansCodeGen5f7569b5f8FeaturePopulator");
            feature.AddKnownType(@"Microsoft.Extensions.Hosting.GenericHostExtensions,Orleans.Runtime", @"Microsoft.Extensions.Hosting.GenericHostExtensions");
            feature.AddKnownType(@"Orleans.Hosting.CoreHostingExtensions,Orleans.Runtime", @"Orleans.Hosting.CoreHostingExtensions");
            feature.AddKnownType(@"Orleans.Hosting.DefaultSiloServices,Orleans.Runtime", @"Orleans.Hosting.DefaultSiloServices");
            feature.AddKnownType(@"Orleans.Hosting.EndpointOptionsExtensions,Orleans.Runtime", @"Orleans.Hosting.EndpointOptionsExtensions");
            feature.AddKnownType(@"Orleans.Hosting.SiloHostBuilderGrainCallFilterExtensions,Orleans.Runtime", @"Orleans.Hosting.SiloHostBuilderGrainCallFilterExtensions");
            feature.AddKnownType(@"Orleans.Hosting.GrainCallFilterExtensions,Orleans.Runtime", @"Orleans.Hosting.GrainCallFilterExtensions");
            feature.AddKnownType(@"Orleans.Hosting.PlacementStrategyExtensions,Orleans.Runtime", @"Orleans.Hosting.PlacementStrategyExtensions");
            feature.AddKnownType(@"Orleans.Hosting.SiloHostBuilderReminderExtensions,Orleans.Runtime", @"Orleans.Hosting.SiloHostBuilderReminderExtensions");
            feature.AddKnownType(@"Orleans.Hosting.GrainServicesSiloBuilderExtensions,Orleans.Runtime", @"Orleans.Hosting.GrainServicesSiloBuilderExtensions");
            feature.AddKnownType(@"Orleans.Hosting.SiloPersistentStreamConfiguratorExtension,Orleans.Runtime", @"Orleans.Hosting.SiloPersistentStreamConfiguratorExtension");
            feature.AddKnownType(@"Orleans.Configuration.Overrides.SiloOptionsOverrides,Orleans.Runtime", @"Orleans.Configuration.Overrides.SiloOptionsOverrides");
            feature.AddKnownType(@"Orleans.Runtime.StreamResourceTestControl,Orleans.Runtime", @"Orleans.Runtime.StreamResourceTestControl");
            feature.AddKnownType(@"Orleans.Runtime.SystemTargetExtensions,Orleans.Runtime", @"Orleans.Runtime.SystemTargetExtensions");
            feature.AddKnownType(@"Orleans.Runtime.SiloUnobservedExceptionsHandlerServiceProviderExtensions,Orleans.Runtime", @"Orleans.Runtime.SiloUnobservedExceptionsHandlerServiceProviderExtensions");
            feature.AddKnownType(@"Orleans.Runtime.Versions.OrleansCodeGenVersionStoreGrainMethodInvoker,Orleans.Runtime", @"Orleans.Runtime.Versions.OrleansCodeGenVersionStoreGrainMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.Versions.OrleansCodeGenVersionStoreGrainReference,Orleans.Runtime", @"Orleans.Runtime.Versions.OrleansCodeGenVersionStoreGrainReference");
            feature.AddKnownType(@"Orleans.Runtime.Utilities.AsyncEnumerable,Orleans.Runtime", @"Orleans.Runtime.Utilities.AsyncEnumerable");
            feature.AddKnownType(@"Orleans.Runtime.Utilities.FactoryUtility,Orleans.Runtime", @"Orleans.Runtime.Utilities.FactoryUtility");
            feature.AddKnownType(@"Orleans.Runtime.Utilities.ImmutableCollectionExtensions,Orleans.Runtime", @"Orleans.Runtime.Utilities.ImmutableCollectionExtensions");
            feature.AddKnownType(@"Orleans.Runtime.Utilities.OrleansDebuggerHelper,Orleans.Runtime", @"Orleans.Runtime.Utilities.OrleansDebuggerHelper");
            feature.AddKnownType(@"Orleans.Runtime.TestHooks.OrleansCodeGenTestHooksSystemTargetMethodInvoker,Orleans.Runtime", @"Orleans.Runtime.TestHooks.OrleansCodeGenTestHooksSystemTargetMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.TestHooks.OrleansCodeGenTestHooksSystemTargetReference,Orleans.Runtime", @"Orleans.Runtime.TestHooks.OrleansCodeGenTestHooksSystemTargetReference");
            feature.AddKnownType(@"Orleans.Runtime.Scheduler.SchedulerExtensions,Orleans.Runtime", @"Orleans.Runtime.Scheduler.SchedulerExtensions");
            feature.AddKnownType(@"Orleans.Runtime.Placement.PlacementRuntimeExtensions,Orleans.Runtime", @"Orleans.Runtime.Placement.PlacementRuntimeExtensions");
            feature.AddKnownType(@"Orleans.Runtime.MembershipService.MembershipHelper,Orleans.Runtime", @"Orleans.Runtime.MembershipService.MembershipHelper");
            feature.AddKnownType(@"Orleans.Runtime.MembershipService.MembershipTableEntryExtensions,Orleans.Runtime", @"Orleans.Runtime.MembershipService.MembershipTableEntryExtensions");
            feature.AddKnownType(@"Orleans.Runtime.MembershipService.MembershipTableSnapshotExtensions,Orleans.Runtime", @"Orleans.Runtime.MembershipService.MembershipTableSnapshotExtensions");
            feature.AddKnownType(@"Orleans.Runtime.GrainDirectory.AddressHelpers,Orleans.Runtime", @"Orleans.Runtime.GrainDirectory.AddressHelpers");
            feature.AddKnownType(@"Orleans.Runtime.GrainDirectory.GrainDirectoryCacheFactory,Orleans.Runtime", @"Orleans.Runtime.GrainDirectory.GrainDirectoryCacheFactory");
            feature.AddKnownType(@"Orleans.Runtime.GrainDirectory.GrainDirectoryCacheExtensions,Orleans.Runtime", @"Orleans.Runtime.GrainDirectory.GrainDirectoryCacheExtensions");
            feature.AddKnownType(@"Orleans.Runtime.Development.DevelopmentSiloBuilderExtensions,Orleans.Runtime", @"Orleans.Runtime.Development.DevelopmentSiloBuilderExtensions");
            feature.AddKnownType(@"Orleans.Runtime.Development.OrleansCodeGenDevelopmentLeaseProviderGrainMethodInvoker,Orleans.Runtime", @"Orleans.Runtime.Development.OrleansCodeGenDevelopmentLeaseProviderGrainMethodInvoker");
            feature.AddKnownType(@"Orleans.Runtime.Development.OrleansCodeGenDevelopmentLeaseProviderGrainReference,Orleans.Runtime", @"Orleans.Runtime.Development.OrleansCodeGenDevelopmentLeaseProviderGrainReference");
            feature.AddKnownType(@"Orleans.Runtime.Counters.OrleansCounterManager,Orleans.Runtime", @"Orleans.Runtime.Counters.OrleansCounterManager");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.IGrainEventStorage,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.IGrainEventStorage");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.LogConsistencyProvider,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.LogConsistencyProvider");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.LogConsistencyProviderFactory,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.LogConsistencyProviderFactory");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.LogViewAdaptor`2,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.LogViewAdaptor`2'2");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.NullGrainEventStorage,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.NullGrainEventStorage");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.SnapshotStateWithMetaDataAndETag`2,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.SnapshotStateWithMetaDataAndETag`2'2");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.SnapshotStateWithMetaData`2,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.SnapshotStateWithMetaData`2'2");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.SnapshotStorageLogConsistencyOptions,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.SnapshotStorageLogConsistencyOptions");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.SnapshotStrategyInfo,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.SnapshotStrategyInfo");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.Hosting.SnapshotStorageOptions,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.Hosting.SnapshotStorageOptions");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.Hosting.SnapshotStorageSiloBuilderExtensions,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.Hosting.SnapshotStorageSiloBuilderExtensions");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.LogViewAdaptor`2+ReadFromSnapshotStorageFailed,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.Orleans.EventSourcing.Snapshot.LogViewAdaptor`2'2.ReadFromSnapshotStorageFailed'2");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.LogViewAdaptor`2+UpdateSnapshotStorageFailed,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.Orleans.EventSourcing.Snapshot.LogViewAdaptor`2'2.UpdateSnapshotStorageFailed'2");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.LogViewAdaptor`2+ReadFromEventStorageFailed,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.Orleans.EventSourcing.Snapshot.LogViewAdaptor`2'2.ReadFromEventStorageFailed'2");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.LogViewAdaptor`2+UpdateEventStorageFailed,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.Orleans.EventSourcing.Snapshot.LogViewAdaptor`2'2.UpdateEventStorageFailed'2");
            feature.AddKnownType(@"Orleans.EventSourcing.Snapshot.LogViewAdaptor`2+UpdateNotificationMessage,Orleans.EventSourcing.Snapshot", @"Orleans.EventSourcing.Snapshot.UpdateNotificationMessage'2");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
